/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var module_transliteration;
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/query.js":
/*!*********************!*\
  !*** ./js/query.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"insertQueryParam\": () => (/* binding */ insertQueryParam),\n/* harmony export */   \"getQueryVariable\": () => (/* binding */ getQueryVariable)\n/* harmony export */ });\nfunction insertQueryParam(key, value) {\n    key = encodeURI(key);\n    value = encodeURI(value);\n\n    var kvp = document.location.search.substr(1).split('&');\n\n    var i = kvp.length;\n    var x;\n    while (i--) {\n        x = kvp[i].split('=');\n\n        if (x[0] == key) {\n            x[1] = value;\n            kvp[i] = x.join('=');\n            break;\n        }\n    }\n\n    if (i < 0) {\n        kvp[kvp.length] = [key, value].join('=');\n    }\n\n    //this will reload the page, it's likely better to store this until finished\n    document.location.search = kvp.join('&');\n}\n\nfunction getQueryVariable(variable) {\n    var query = window.location.search.substring(1);\n    var vars = query.split('&');\n    for (var i = 0; i < vars.length; i++) {\n        var pair = vars[i].split('=');\n        if (decodeURIComponent(pair[0]) === variable) {\n            return decodeURIComponent(pair[1]);\n        }\n    }\n    // console.debug('Query variable %s not found', variable);\n}\n\n\n//# sourceURL=webpack://module_%5Bname%5D/./js/query.js?");

/***/ }),

/***/ "./js/transliteration.js":
/*!*******************************!*\
  !*** ./js/transliteration.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"saveLipi\": () => (/* binding */ saveLipi),\n/* harmony export */   \"transliterate\": () => (/* binding */ transliterate),\n/* harmony export */   \"updateTransliteration\": () => (/* binding */ updateTransliteration)\n/* harmony export */ });\n/* harmony import */ var _sanskrit_coders_sanscript__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sanskrit-coders/sanscript */ \"./node_modules/@sanskrit-coders/sanscript/sanscript.js\");\n/* harmony import */ var _sanskrit_coders_sanscript__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_sanskrit_coders_sanscript__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./js/utils.js\");\n/* harmony import */ var _query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query */ \"./js/query.js\");\n\n\n\n\nlet transliterationTarget = \"devanagari\";\n/* ---- Cookies ---- */\nlet LIPI_DEFAULT = \"devanagari\";\nlet LIPI_COOKIE = \"transliteration_target\";\nlet LIPI_EXPIRY = 30 * 24 * 3600 * 1000;  // 30 days\n\nfunction loadLipi() {\n    let previousTransliterationTarget = transliterationTarget;\n    transliterationTarget = _query__WEBPACK_IMPORTED_MODULE_2__.getQueryVariable(\"transliteration_target\");\n    if (!transliterationTarget) {\n        transliterationTarget = _utils__WEBPACK_IMPORTED_MODULE_1__.getCookie(LIPI_COOKIE) || LIPI_DEFAULT;\n    }\n    var translitrationTargetDropdown = document.getElementsByName(\"transliterationDropdown\")[0];\n    translitrationTargetDropdown.value = transliterationTarget;\n    console.log(transliterationTarget);\n}\n\nfunction saveLipi(lipi) {\n    transliterationTarget = lipi || LIPI_DEFAULT;\n    var date = new Date();\n    date.setTime(date.getTime() + LIPI_EXPIRY);\n    var addendum = \"; expires=\" + date.toGMTString() + \"; path=/\";\n    document.cookie = LIPI_COOKIE + \"=\" + transliterationTarget + addendum;\n}\n\n\nfunction transliterate() {\n    loadLipi();\n    if (!transliterationTarget) {\n        return;\n    }\n    let transliterationSource = pageVars.unicodeScript || \"devanagari\";\n    console.debug(transliterationSource, transliterationTarget);\n    var textNodes = _utils__WEBPACK_IMPORTED_MODULE_1__.textNodesUnder(document.getElementsByTagName(\"body\")[0]);\n    // console.debug(textNodes);\n    textNodes.forEach(function (textNode) {\n        if(textNode.parentNode.nodeName.toLowerCase() != \"option\") {\n            // console.debug(textNode.textContent, transliterationSource, transliterationTarget);\n            // console.debug(Sanscript.schemes)\n            if (transliterationSource in (_sanskrit_coders_sanscript__WEBPACK_IMPORTED_MODULE_0___default().schemes) && transliterationTarget in (_sanskrit_coders_sanscript__WEBPACK_IMPORTED_MODULE_0___default().schemes)) {\n                textNode.textContent = _sanskrit_coders_sanscript__WEBPACK_IMPORTED_MODULE_0___default().t(textNode.textContent, transliterationSource, transliterationTarget);\n            } else {\n                console.error(\"Some unsupported scheme! Not transliterating! Check!\", transliterationSource, transliterationTarget)\n            }\n        }\n    })\n}\n\nfunction updateTransliteration() {\n    var translitrationTargetDropdown = document.getElementsByName(\"transliterationDropdown\")[0];\n    var translitrationTarget = translitrationTargetDropdown.options[translitrationTargetDropdown.selectedIndex].value;\n    saveLipi(translitrationTarget);\n    _query__WEBPACK_IMPORTED_MODULE_2__.insertQueryParam(\"transliteration_target\", translitrationTarget);\n}\n\n\n\n//# sourceURL=webpack://module_%5Bname%5D/./js/transliteration.js?");

/***/ }),

/***/ "./js/utils.js":
/*!*********************!*\
  !*** ./js/utils.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"textNodesUnder\": () => (/* binding */ textNodesUnder),\n/* harmony export */   \"getCookie\": () => (/* binding */ getCookie)\n/* harmony export */ });\n/* unused harmony export replaceAsync */\nasync function replaceAsync(str, regex, asyncFn) {\n    const promises = [];\n    str.replace(regex, (match, ...args) => {\n        const promise = asyncFn(match, ...args);\n        promises.push(promise);\n    });\n    const data = await Promise.all(promises);\n    return str.replace(regex, () => data.shift());\n}\nfunction textNodesUnder(node){\n    var all = [];\n    for (node=node.firstChild;node;node=node.nextSibling){\n        if (node.nodeType==3) all.push(node);\n        else all = all.concat(textNodesUnder(node));\n    }\n    return all;\n}\n\nfunction getCookie(cname) {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for(var i = 0; i <ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return undefined;\n}\n\n//# sourceURL=webpack://module_%5Bname%5D/./js/utils.js?");

/***/ }),

/***/ "./node_modules/@sanskrit-coders/sanscript/sanscript.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sanskrit-coders/sanscript/sanscript.js ***!
  \**************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar schemes = {};\nschemes.ahom = {\n  \"vowels\": [\"𑜒\", \"𑜒𑜡\", \"𑜒𑜢\", \"𑜒𑜣\", \"𑜒𑜤\", \"𑜒𑜥\", \"𑜍𑜤\", \"𑜍𑜥\", \"𑜎𑜤\", \"𑜎𑜥\", \"𑜒𑜦\", \"𑜒𑜦\", \"𑜒𑜩\", \"𑜒𑜨\", \"𑜒𑜨\", \"𑜒𑜧\"],\n  \"vowel_marks\": [\"𑜡\", \"𑜢\", \"𑜣\", \"𑜤\", \"𑜥\", \"𑜞𑜤\", \"𑜞𑜥\", \"𑜝𑜤\", \"𑜝𑜥\", \"𑜦\", \"𑜦\", \"𑜩\", \"𑜨\", \"𑜨\", \"𑜧\"],\n  \"yogavaahas\": [\"𑜪\", \"𑜑𑜫\", \"𑜪\"],\n  \"virama\": [\"𑜫\"],\n  \"consonants\": [\"𑜀\", \"𑜁\", \"𑜕\", \"𑜗\", \"𑜂\", \"𑜋\", \"𑜋\", \"𑜊\", \"𑜙\", \"𑜐\", \"𑜄\", \"𑜌\", \"𑜓\", \"𑜔\", \"𑜃\", \"𑜄\", \"𑜌\", \"𑜓\", \"𑜔\", \"𑜃\", \"𑜆\", \"𑜇\", \"𑜈\", \"𑜘\", \"𑜉\", \"𑜊\", \"𑜍\", \"𑜎\", \"𑜈\", \"𑜏\", \"𑜏\", \"𑜏\", \"𑜑\", \"𑜎\", \"𑜀𑜫𑜏\", \"𑜊𑜫𑜐\"],\n  \"symbols\": [\"𑜰\", \"𑜱\", \"𑜲\", \"𑜳\", \"𑜴\", \"𑜵\", \"𑜶\", \"𑜷\", \"𑜸\", \"𑜹\", \"𑜒𑜪𑜨\", \"'\", \"𑜼\", \"𑜽\"],\n  \"zwj\": [\"\\u200D\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"𑜦\"],\n  \"extra_consonants\": [\"𑜀\", \"𑜁\", \"𑜕\", \"𑜊\", \"𑜓\", \"𑜔\", \"𑜇\", \"𑜊\", \"𑜍\"]\n};\nschemes.assamese = {\n  \"vowels\": [\"অ\", \"আ\", \"ই\", \"ঈ\", \"উ\", \"ঊ\", \"ঋ\", \"ৠ\", \"ঌ\", \"ৡ\", \"ऎ\", \"এ\", \"ঐ\", \"ऒ\", \"ও\", \"ঔ\"],\n  \"vowel_marks\": [\"া\", \"ি\", \"ী\", \"ু\", \"ূ\", \"ৃ\", \"ৄ\", \"ৢ\", \"ৣ\", \"ॆ\", \"ে\", \"ৈ\", \"ॊ\", \"ো\", \"ৌ\"],\n  \"yogavaahas\": [\"ং\", \"ঃ\", \"ঁ\"],\n  \"virama\": [\"্\"],\n  \"consonants\": [\"ক\", \"খ\", \"গ\", \"ঘ\", \"ঙ\", \"চ\", \"ছ\", \"জ\", \"ঝ\", \"ঞ\", \"ট\", \"ঠ\", \"ড\", \"ঢ\", \"ণ\", \"ত\", \"থ\", \"দ\", \"ধ\", \"ন\", \"প\", \"ফ\", \"ব\", \"ভ\", \"ম\", \"য\", \"ৰ\", \"ল\", \"ৱ\", \"শ\", \"ষ\", \"স\", \"হ\", \"ল়\", \"ক্ষ\", \"জ্ঞ\"],\n  \"symbols\": [\"০\", \"১\", \"২\", \"৩\", \"৪\", \"৫\", \"৬\", \"৭\", \"৮\", \"৯\", \"ওঁ\", \"ঽ\", \"।\", \"॥\"],\n  \"zwj\": [\"‍\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"ে\"],\n  \"extra_consonants\": [\"ক়\", \"খ়\", \"গ়\", \"জ়\", \"ড়\", \"ঢ়\", \"ফ়\", \"য়\", \"ৰ়\", \"ষ়\"]\n};\nschemes.avestan = {\n  \"vowels\": [\"𐬀\", \"𐬁\", \"𐬌\", \"𐬍\", \"𐬎\", \"𐬏\", \"𐬆𐬭𐬆\", \"𐬇𐬭𐬇\", \"𐬆𐬮𐬆\", \"𐬇𐬮𐬇\", \"𐬈\", \"𐬉\", \"𐬀𐬌\", \"𐬊\", \"𐬋\", \"𐬀𐬎\"],\n  \"vowel_marks\": [\"𐬁\", \"𐬌\", \"𐬍\", \"𐬎\", \"𐬏\", \"𐬆𐬭𐬆\", \"𐬇𐬭𐬇\", \"𐬆𐬮𐬆\", \"𐬇𐬮𐬇\", \"𐬈\", \"𐬉\", \"𐬀𐬌\", \"𐬊\", \"𐬋\", \"𐬀𐬎\"],\n  \"yogavaahas\": [\"𐬩\", \"𐬵\", \"𐬩\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"𐬐𐬀\", \"𐬑𐬀\", \"𐬔𐬀\", \"𐬖𐬀\", \"𐬢𐬀\", \"𐬗𐬀\", \"𐬗𐬀\", \"𐬘𐬀\", \"𐬘𐬀\", \"𐬦𐬀\", \"𐬙𐬀\", \"𐬚𐬀\", \"𐬛𐬀\", \"𐬛𐬀\", \"𐬧𐬀\", \"𐬙𐬀\", \"𐬚𐬀\", \"𐬛𐬀\", \"𐬜𐬀\", \"𐬥𐬀\", \"𐬞𐬀\", \"𐬞𐬀\", \"𐬠𐬀\", \"𐬠𐬀\", \"𐬨𐬀\", \"𐬫𐬀\", \"𐬭𐬀\", \"𐬮𐬀\", \"𐬬𐬀\", \"𐬱𐬀\", \"𐬴𐬀\", \"𐬯𐬀\", \"𐬵𐬀\", \"𐬮𐬀\", \"𐬐𐬴𐬀\", \"𐬘𐬦𐬀\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"𐬋𐬨\", \"\", \"𐬼‏\", \"𐬽‏\"],\n  \"zwj\": [\"\\u200D\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"𐬉\"],\n  \"extra_consonants\": [\"𐬐𐬀\", \"𐬓𐬀\", \"𐬕𐬀\", \"𐬰𐬀\", \"𐬛𐬀\", \"𐬜𐬀\", \"𐬟𐬀\", \"𐬪𐬀\", \"𐬭𐬀\"]\n};\nschemes.balinese = {\n  \"vowels\": [\"ᬅ\", \"ᬆ\", \"ᬇ\", \"ᬈ\", \"ᬉ\", \"ᬊ\", \"ᬋ\", \"ᬌ\", \"ᬍ\", \"ᬎ\", \"ᬏ\", \"ᬏ\", \"ᬐ\", \"ᬑ\", \"ᬑ\", \"ᬒ\"],\n  \"vowel_marks\": [\"ᬵ\", \"ᬶ\", \"ᬷ\", \"ᬸ\", \"ᬹ\", \"ᬺ\", \"ᬻ\", \"ᬼ\", \"ᬽ\", \"ᬾ\", \"ᬾ\", \"ᬿ\", \"ᭀ\", \"ᭀ\", \"ᭁ\"],\n  \"yogavaahas\": [\"ᬂ\", \"ᬄ\", \"ᬁ\"],\n  \"virama\": [\"᭄\"],\n  \"consonants\": [\"ᬓ\", \"ᬔ\", \"ᬕ\", \"ᬖ\", \"ᬗ\", \"ᬘ\", \"ᬙ\", \"ᬚ\", \"ᬛ\", \"ᬜ\", \"ᬝ\", \"ᬞ\", \"ᬟ\", \"ᬠ\", \"ᬡ\", \"ᬢ\", \"ᬣ\", \"ᬤ\", \"ᬥ\", \"ᬦ\", \"ᬧ\", \"ᬨ\", \"ᬩ\", \"ᬪ\", \"ᬫ\", \"ᬬ\", \"ᬭ\", \"ᬮ\", \"ᬯ\", \"ᬰ\", \"ᬱ\", \"ᬲ\", \"ᬳ\", \"ᬮ᬴\", \"ᬓ᭄ᬱ\", \"ᬚ᭄ᬜ\"],\n  \"symbols\": [\"᭐\", \"᭑\", \"᭒\", \"᭓\", \"᭔\", \"᭕\", \"᭖\", \"᭗\", \"᭘\", \"᭙\", \"ᬑᬁ\", \"'\", \"᭞\", \"᭟\"],\n  \"zwj\": [\"\\u200D\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"ᬾ\"],\n  \"extra_consonants\": [\"ᬓ᬴\", \"ᬔ᬴\", \"ᬕ᬴\", \"ᬚ᬴\", \"ᬟ᬴\", \"ᬠ᬴\", \"ᬧ᬴\", \"ᬬ᬴\", \"ᬭ᬴\"]\n};\nschemes.bengali = {\n  \"vowels\": [\"অ\", \"আ\", \"ই\", \"ঈ\", \"উ\", \"ঊ\", \"ঋ\", \"ৠ\", \"ঌ\", \"ৡ\", \"ऎ\", \"এ\", \"ঐ\", \"ऒ\", \"ও\", \"ঔ\"],\n  \"vowel_marks\": [\"া\", \"ি\", \"ী\", \"ু\", \"ূ\", \"ৃ\", \"ৄ\", \"ৢ\", \"ৣ\", \"ॆ\", \"ে\", \"ৈ\", \"ॊ\", \"ো\", \"ৌ\"],\n  \"yogavaahas\": [\"ং\", \"ঃ\", \"ঁ\"],\n  \"virama\": [\"্\"],\n  \"consonants\": [\"ক\", \"খ\", \"গ\", \"ঘ\", \"ঙ\", \"চ\", \"ছ\", \"জ\", \"ঝ\", \"ঞ\", \"ট\", \"ঠ\", \"ড\", \"ঢ\", \"ণ\", \"ত\", \"থ\", \"দ\", \"ধ\", \"ন\", \"প\", \"ফ\", \"ব\", \"ভ\", \"ম\", \"য\", \"র\", \"ল\", \"ব\", \"শ\", \"ষ\", \"স\", \"হ\", \"ল়\", \"ক্ষ\", \"জ্ঞ\"],\n  \"symbols\": [\"০\", \"১\", \"২\", \"৩\", \"৪\", \"৫\", \"৬\", \"৭\", \"৮\", \"৯\", \"ওঁ\", \"ঽ\", \"।\", \"॥\"],\n  \"zwj\": [\"\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"ে\"],\n  \"extra_consonants\": [\"ক়\", \"খ়\", \"গ়\", \"জ়\", \"ড়\", \"ঢ়\", \"ফ়\", \"য়\", \"র়\", \"ষ়\"]\n};\nschemes.bhaisuki = {\n  \"vowels\": [\"𑰀\", \"𑰁\", \"𑰂\", \"𑰃\", \"𑰄\", \"𑰅\", \"𑰆\", \"𑰇\", \"𑰈\", \"𑰈\", \"𑰊\", \"𑰊\", \"𑰋\", \"𑰌\", \"𑰌\", \"𑰍\"],\n  \"vowel_marks\": [\"𑰯\", \"𑰰\", \"𑰱\", \"𑰲\", \"𑰳\", \"𑰴\", \"𑰵\", \"𑰶\", \"𑰶\", \"𑰸\", \"𑰸\", \"𑰹\", \"𑰺\", \"𑰺\", \"𑰻\"],\n  \"yogavaahas\": [\"𑰽\", \"𑰾\", \"𑰼\"],\n  \"virama\": [\"𑰿\"],\n  \"consonants\": [\"𑰎\", \"𑰏\", \"𑰐\", \"𑰑\", \"𑰒\", \"𑰓\", \"𑰔\", \"𑰕\", \"𑰖\", \"𑰗\", \"𑰘\", \"𑰙\", \"𑰚\", \"𑰛\", \"𑰜\", \"𑰝\", \"𑰞\", \"𑰟\", \"𑰠\", \"𑰡\", \"𑰢\", \"𑰣\", \"𑰤\", \"𑰥\", \"𑰦\", \"𑰧\", \"𑰨\", \"𑰩\", \"𑰪\", \"𑰫\", \"𑰬\", \"𑰭\", \"𑰮\", \"𑰩\", \"𑰎𑰿𑰬\", \"𑰕𑰿𑰗\"],\n  \"symbols\": [\"𑱐\", \"𑱑\", \"𑱒\", \"𑱓\", \"𑱔\", \"𑱕\", \"𑱖\", \"𑱗\", \"𑱘\", \"𑱙\", \"𑰌𑰼\", \"𑱀\", \"𑱁\", \"𑱂\"],\n  \"zwj\": [\"\\u200D\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"𑰸\"],\n  \"extra_consonants\": [\"𑰎\", \"𑰏\", \"𑰐\", \"𑰕\", \"𑰚\", \"𑰛\", \"𑰣\", \"𑰧\", \"𑰨\"]\n};\nschemes.brahmi = {\n  \"vowels\": [\"𑀅\", \"𑀆\", \"𑀇\", \"𑀈\", \"𑀉\", \"𑀊\", \"𑀋\", \"𑀌\", \"𑀍\", \"𑀎\", \"𑀏𑁆\", \"𑀏\", \"𑀐\", \"𑀑𑁆\", \"𑀑\", \"𑀒\"],\n  \"vowel_marks\": [\"𑀸\", \"𑀺\", \"𑀻\", \"𑀼\", \"𑀽\", \"𑀾\", \"𑀿\", \"𑁀\", \"𑁁\", \"𑁂\", \"𑁂\", \"𑁃\", \"𑁄\", \"𑁄\", \"𑁅\"],\n  \"yogavaahas\": [\"𑀁\", \"𑀂\", \"𑀀\"],\n  \"virama\": [\"𑁆\"],\n  \"consonants\": [\"𑀓\", \"𑀔\", \"𑀕\", \"𑀖\", \"𑀗\", \"𑀘\", \"𑀙\", \"𑀚\", \"𑀛\", \"𑀜\", \"𑀝\", \"𑀞\", \"𑀟\", \"𑀠\", \"𑀡\", \"𑀢\", \"𑀣\", \"𑀤\", \"𑀥\", \"𑀦\", \"𑀧\", \"𑀨\", \"𑀩\", \"𑀪\", \"𑀫\", \"𑀬\", \"𑀭\", \"𑀮\", \"𑀯\", \"𑀰\", \"𑀱\", \"𑀲\", \"𑀳\", \"𑀴\", \"𑀓𑁆𑀱\", \"𑀚𑁆𑀜\"],\n  \"symbols\": [\"𑁦\", \"𑁧\", \"𑁨\", \"𑁩\", \"𑁪\", \"𑁫\", \"𑁬\", \"𑁭\", \"𑁮\", \"𑁯\", \"𑀑𑀁\", \"\", \"𑁇\", \"𑁈\"],\n  \"zwj\": [\"\\u200D\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"𑁂\"],\n  \"extra_consonants\": [\"𑀓\", \"𑀔\", \"𑀕\", \"𑀚\", \"𑀟\", \"𑀠\", \"𑀨\", \"𑀬\", \"𑀭\"]\n};\nschemes.brahmi_tamil = {\n  \"vowels\": [\"𑀅\", \"𑀆\", \"𑀇\", \"𑀈\", \"𑀉\", \"𑀊\", \"𑀭𑀼\", \"𑀭𑀽\", \"𑀮𑀼\", \"𑀮𑀽\", \"𑀏𑁆\", \"𑀏\", \"𑀐\", \"𑀑𑁆\", \"𑀑\", \"𑀒\"],\n  \"vowel_marks\": [\"𑀸\", \"𑀺\", \"𑀻\", \"𑀼\", \"𑀽\", \"𑁆𑀭𑀼\", \"𑁆𑀭𑀽\", \"𑁆𑀮𑀼\", \"𑁆𑀮𑀽\", \"𑁂𑁆\", \"𑁂\", \"𑁃\", \"𑁄𑁆\", \"𑁄\", \"𑁅\"],\n  \"yogavaahas\": [\"𑀫𑁆\", \"𑀂\", \"𑀫𑁆\"],\n  \"virama\": [\"𑁆\"],\n  \"consonants\": [\"𑀓\", \"𑀓\", \"𑀓\", \"𑀓\", \"𑀗\", \"𑀘\", \"𑀘\", \"𑀚\", \"𑀚\", \"𑀜\", \"𑀝\", \"𑀝\", \"𑀝\", \"𑀝\", \"𑀡\", \"𑀢\", \"𑀢\", \"𑀢\", \"𑀥\", \"𑀦\", \"𑀧\", \"𑀧\", \"𑀧\", \"𑀧\", \"𑀫\", \"𑀬\", \"𑀭\", \"𑀮\", \"𑀯\", \"𑀰\", \"𑀱\", \"𑀲\", \"𑀳\", \"𑀴\", \"𑀓𑁆𑀱\", \"𑀚𑁆𑀜\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"𑀑𑀫𑁆\", \"'\", \".\", \"..\"],\n  \"candra\": [\"𑁂𑁆\"],\n  \"extra_consonants\": [\"𑀓\", \"𑀓\", \"𑀓\", \"𑀚\", \"𑀝\", \"𑀝\", \"𑀧\", \"𑀬\", \"𑀶\"]\n};\nschemes.burmese = {\n  \"vowels\": [\"အ\", \"အာ\", \"ဣ\", \"ဤ\", \"ဥ\", \"ဦ\", \"ၒ\", \"ၓ\", \"ၔ\", \"ၕ\", \"ဧ\", \"ဧ\", \"အဲ\", \"ဩ\", \"ဩ\", \"ဪ\"],\n  \"vowel_marks\": [\"ာ\", \"ိ\", \"ီ\", \"ု\", \"ူ\", \"ၖ\", \"ၗ\", \"ၘ\", \"ၙ\", \"ေ\", \"ေ\", \"ဲ\", \"ော\", \"ော\", \"ော်\"],\n  \"yogavaahas\": [\"ံ\", \"း\", \"ံ\"],\n  \"virama\": [\"်\"],\n  \"consonants\": [\"က\", \"ခ\", \"ဂ\", \"ဃ\", \"င\", \"စ\", \"ဆ\", \"ဇ\", \"ဈ\", \"ဉ\", \"ဋ\", \"ဌ\", \"ဍ\", \"ဎ\", \"ဏ\", \"တ\", \"ထ\", \"ဒ\", \"ဓ\", \"န\", \"ပ\", \"ဖ\", \"ဗ\", \"ဘ\", \"မ\", \"ယ\", \"ရ\", \"လ\", \"ဝ\", \"ၐ\", \"ၑ\", \"သ\", \"ဟ\", \"ဠ\", \"က္ၑ\", \"ဇ္ဉ\"],\n  \"symbols\": [\"၀\", \"၁\", \"၂\", \"၃\", \"၄\", \"၅\", \"၆\", \"၇\", \"၈\", \"၉\", \"ဩံ\", \"'\", \"၊\", \"။\"],\n  \"zwj\": [\"\\u200D\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"ေ\"],\n  \"extra_consonants\": [\"က\", \"ခ\", \"ဂ\", \"ဇ\", \"ဍ\", \"ဎ\", \"ဖ\", \"ယ\", \"ရ\"]\n};\nschemes.chakma = {\n  \"vowels\": [\"𑄃𑄧\", \"𑄃\", \"𑄃𑄨\", \"𑄃𑄩\", \"𑄃𑄪\", \"𑄃𑄫\", \"𑄢𑄪\", \"𑄢𑄫\", \"𑄣𑄪\", \"𑄣𑄫\", \"𑄃𑄬\", \"𑄃𑄬\", \"𑄃𑄭\", \"𑄃𑄮\", \"𑄃𑄮\", \"𑄃𑄯\"],\n  \"vowel_marks\": [\"\", \"𑄨\", \"𑄩\", \"𑄪\", \"𑄫\", \"𑄳𑄢𑄪\", \"𑄳𑄢𑄫\", \"𑄳𑄣𑄪\", \"𑄳𑄣𑄫\", \"𑄬\", \"𑄬\", \"𑄭\", \"𑄮\", \"𑄮\", \"𑄯\"],\n  \"yogavaahas\": [\"𑄁\", \"𑄂\", \"𑄀\"],\n  \"virama\": [\"𑄴\"],\n  \"consonants\": [\"𑄇𑄧\", \"𑄈𑄧\", \"𑄉𑄧\", \"𑄊𑄧\", \"𑄋𑄧\", \"𑄌𑄧\", \"𑄍𑄧\", \"𑄎𑄧\", \"𑄏𑄧\", \"𑄐𑄧\", \"𑄑𑄧\", \"𑄒𑄧\", \"𑄓𑄧\", \"𑄔𑄧\", \"𑄕𑄧\", \"𑄖𑄧\", \"𑄗𑄧\", \"𑄘𑄧\", \"𑄙𑄧\", \"𑄚𑄧\", \"𑄛𑄧\", \"𑄜𑄧\", \"𑄝𑄧\", \"𑄞𑄧\", \"𑄟𑄧\", \"𑄡𑄧\", \"𑄢𑄧\", \"𑄣𑄧\", \"𑄤𑄧\", \"𑄥𑄧\", \"𑄥𑄧\", \"𑄥𑄧\", \"𑄦𑄧\", \"𑄣𑄧\", \"𑄇𑄴𑄥𑄧\", \"𑄎𑄴𑄐𑄧\"],\n  \"symbols\": [\"𑄶\", \"𑄷\", \"𑄸\", \"𑄹\", \"𑄺\", \"𑄻\", \"𑄼\", \"𑄽\", \"𑄾\", \"𑄿\", \"𑄃𑄮𑄀\", \"'\", \"𑅁\", \"𑅂\"],\n  \"zwj\": [\"\\u200D\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"𑄬\"],\n  \"extra_consonants\": [\"𑄇𑄧\", \"𑄈𑄧\", \"𑄉𑄧\", \"𑄎𑄧\", \"𑄓𑄧\", \"𑄔𑄧\", \"𑄜𑄧\", \"𑄠𑄧\", \"𑄢𑄧\"]\n};\nschemes.cham = {\n  \"vowels\": [\"ꨀ\", \"ꨀꨩ\", \"ꨁ\", \"ꨁꨩ\", \"ꨂ\", \"ꨂꨩ\", \"ꨣꨮ\", \"ꨣꨮꨩ\", \"ꨤꨮ\", \"ꨤꨮꨩ\", \"ꨃ\", \"ꨃ\", \"ꨄ\", \"ꨅ\", \"ꨅ\", \"ꨀꨯꨱ\"],\n  \"vowel_marks\": [\"ꨩ\", \"ꨪ\", \"ꨫ\", \"ꨭ\", \"ꨭꨩ\", \"ꨴꨮ\", \"ꨴꨮꨩ\", \"ꨵꨮ\", \"ꨵꨮꨩ\", \"ꨯꨮ\", \"ꨯꨮ\", \"ꨰ\", \"ꨮ\", \"ꨯ\", \"ꨯꨱ\"],\n  \"yogavaahas\": [\"ꩌ\", \"ꩍ\", \"ꩃ\"],\n  \"virama\": [\"ʾ\"],\n  \"consonants\": [\"ꨆ\", \"ꨇ\", \"ꨈ\", \"ꨉ\", \"ꨋ\", \"ꨌ\", \"ꨍ\", \"ꨎ\", \"ꨏ\", \"ꨑ\", \"ꨓ\", \"ꨔ\", \"ꨕ\", \"ꨖ\", \"ꨘ\", \"ꨓ\", \"ꨔ\", \"ꨕ\", \"ꨖ\", \"ꨘ\", \"ꨚ\", \"ꨜ\", \"ꨝ\", \"ꨞ\", \"ꨠ\", \"ꨢ\", \"ꨣ\", \"ꨤ\", \"ꨥ\", \"ꨦ\", \"ꨦ\", \"ꨧ\", \"ꨨ\", \"ꨤ\", \"ꩀꨦ\", \"ꩄꨑ\"],\n  \"symbols\": [\"꩐\", \"꩑\", \"꩒\", \"꩓\", \"꩔\", \"꩕\", \"꩖\", \"꩗\", \"꩘\", \"꩙\", \"ꨅꩌ\", \"'\", \"꩝\", \"꩞\"],\n  \"zwj\": [\"\\u200D\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"ꨯꨮ\"],\n  \"extra_consonants\": [\"ꨆ\", \"ꨇ\", \"ꨈ\", \"ꨎ\", \"ꨕ\", \"ꨖ\", \"ꨜ\", \"ꨥ\", \"ꨣ\"]\n};\nschemes.devanagari = {\n  \"vowels\": [\"अ\", \"आ\", \"इ\", \"ई\", \"उ\", \"ऊ\", \"ऋ\", \"ॠ\", \"ऌ\", \"ॡ\", \"ऎ\", \"ए\", \"ऐ\", \"ऒ\", \"ओ\", \"औ\", \"ऍ\", \"ऑ\"],\n  \"vowel_marks\": [\"ा\", \"ि\", \"ी\", \"ु\", \"ू\", \"ृ\", \"ॄ\", \"ॢ\", \"ॣ\", \"ॆ\", \"े\", \"ै\", \"ॊ\", \"ो\", \"ौ\", \"ॅ\", \"ॉ\"],\n  \"yogavaahas\": [\"ं\", \"ः\", \"ँ\", \"ᳵ\", \"ᳶ\"],\n  \"virama\": [\"्\"],\n  \"consonants\": [\"क\", \"ख\", \"ग\", \"घ\", \"ङ\", \"च\", \"छ\", \"ज\", \"झ\", \"ञ\", \"ट\", \"ठ\", \"ड\", \"ढ\", \"ण\", \"त\", \"थ\", \"द\", \"ध\", \"न\", \"प\", \"फ\", \"ब\", \"भ\", \"म\", \"य\", \"र\", \"ल\", \"व\", \"श\", \"ष\", \"स\", \"ह\", \"ळ\", \"क्ष\", \"ज्ञ\"],\n  \"symbols\": [\"०\", \"१\", \"२\", \"३\", \"४\", \"५\", \"६\", \"७\", \"८\", \"९\", \"ॐ\", \"ऽ\", \"।\", \"॥\"],\n  \"zwj\": [\"\\u200D\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\", \"᳡\", \"꣡\", \"꣢\", \"꣣\", \"꣤\", \"꣥\", \"꣦\", \"꣧\", \"꣨\", \"꣩\", \"꣪\", \"꣫\", \"꣬\", \"꣭\", \"꣮\", \"꣯\", \"꣰\", \"꣱\"],\n  \"candra\": [\"ॅ\"],\n  \"extra_consonants\": [\"क़\", \"ख़\", \"ग़\", \"ज़\", \"ड़\", \"ढ़\", \"फ़\", \"य़\", \"ऱ\", \"ऴ\"]\n};\nschemes.dogra = {\n  \"vowels\": [\"𑠀\", \"𑠁\", \"𑠂\", \"𑠃\", \"𑠄\", \"𑠅\", \"𑠤𑠭\", \"𑠤𑠮\", \"𑠥𑠭\", \"𑠥𑠮\", \"𑠆\", \"𑠆\", \"𑠇\", \"𑠈\", \"𑠈\", \"𑠉\"],\n  \"vowel_marks\": [\"𑠬\", \"𑠭\", \"𑠮\", \"𑠯\", \"𑠰\", \"𑠱\", \"𑠲\", \"𑠹𑠥𑠭\", \"𑠹𑠥𑠮\", \"𑠳\", \"𑠳\", \"𑠴\", \"𑠵\", \"𑠵\", \"𑠶\"],\n  \"yogavaahas\": [\"𑠷\", \"𑠸\", \"𑠷\"],\n  \"virama\": [\"𑠹\"],\n  \"consonants\": [\"𑠊\", \"𑠋\", \"𑠌\", \"𑠍\", \"𑠎\", \"𑠏\", \"𑠐\", \"𑠑\", \"𑠒\", \"𑠓\", \"𑠔\", \"𑠕\", \"𑠖\", \"𑠗\", \"𑠘\", \"𑠙\", \"𑠚\", \"𑠛\", \"𑠜\", \"𑠝\", \"𑠞\", \"𑠟\", \"𑠠\", \"𑠡\", \"𑠢\", \"𑠣\", \"𑠤\", \"𑠥\", \"𑠦\", \"𑠧\", \"𑠨\", \"𑠩\", \"𑠪\", \"𑠥𑠺\", \"𑠊𑠹𑠨\", \"𑠑𑠹𑠓\"],\n  \"symbols\": [\"०\", \"१\", \"२\", \"३\", \"४\", \"५\", \"६\", \"७\", \"८\", \"९\", \"𑠈𑠷\", \"ऽ\", \"।\", \"॥\"],\n  \"zwj\": [\"\\u200D\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"𑠳\"],\n  \"extra_consonants\": [\"𑠊𑠺\", \"𑠋𑠺\", \"𑠌𑠺\", \"𑠑𑠺\", \"𑠫\", \"𑠗𑠺\", \"𑠟𑠺\", \"𑠣𑠺\", \"𑠤𑠺\"]\n};\nschemes.gondi_gunjala = {\n  \"vowels\": [\"𑵠\", \"𑵡\", \"𑵢\", \"𑵣\", \"𑵤\", \"𑵥\", \"𑶈𑶍\", \"𑶈𑶎\", \"𑵵𑶍\", \"𑵵𑶎\", \"𑵧\", \"𑵧\", \"𑵨\", \"𑵪\", \"𑵪\", \"𑵫\"],\n  \"vowel_marks\": [\"𑶊\", \"𑶋\", \"𑶌\", \"𑶍\", \"𑶎\", \"𑶗𑶈𑶍\", \"𑶗𑶈𑶎\", \"𑶗𑵵𑶍\", \"𑶗𑵵𑶎\", \"𑶐\", \"𑶐\", \"𑶑\", \"𑶓\", \"𑶓\", \"𑶔\"],\n  \"yogavaahas\": [\"𑶕\", \"𑶖\", \"𑶕\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"𑵱\", \"𑵲\", \"𑵶\", \"𑵷\", \"𑶄\", \"𑵻\", \"𑵼\", \"𑶀\", \"𑶁\", \"𑵺\", \"𑵽\", \"𑵾\", \"𑶂\", \"𑶃\", \"𑵺\", \"𑵳\", \"𑵴\", \"𑵸\", \"𑵹\", \"𑵺\", \"𑶅\", \"𑶆\", \"𑵮\", \"𑵯\", \"𑵰\", \"𑵬\", \"𑶈\", \"𑵵\", \"𑵭\", \"𑶉\", \"𑶉\", \"𑶉\", \"𑶇\", \"𑵿\", \"𑵱𑶗𑶉\", \"𑶀𑶗𑵺\"],\n  \"symbols\": [\"𑶠\", \"𑶡\", \"𑶢\", \"𑶣\", \"𑶤\", \"𑶥\", \"𑶦\", \"𑶧\", \"𑶨\", \"𑶩\", \"𑶘\", \"\", \".\", \"..\"],\n  \"zwj\": [\"\\u200D\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"𑶐\"],\n  \"extra_consonants\": [\"𑵱\", \"𑵲\", \"𑵶\", \"𑶀\", \"𑶂\", \"𑶃\", \"𑶆\", \"𑵬\", \"𑶈\"]\n};\nschemes.gondi_masaram = {\n  \"vowels\": [\"𑴀\", \"𑴁\", \"𑴂\", \"𑴃\", \"𑴄\", \"𑴅\", \"𑴦𑴶\", \"𑴦𑴵\", \"𑴧𑴴\", \"𑴧𑴵\", \"𑴆\", \"𑴆\", \"𑴈\", \"𑴉\", \"𑴉\", \"𑴋\"],\n  \"vowel_marks\": [\"𑴱\", \"𑴲\", \"𑴳\", \"𑴴\", \"𑴵\", \"𑴶\", \"𑵅𑴦𑴵\", \"𑵅𑴧𑴴\", \"𑵅𑴧𑴵\", \"𑴺\", \"𑴺\", \"𑴼\", \"𑴽\", \"𑴽\", \"𑴿\"],\n  \"yogavaahas\": [\"𑵀\", \"𑵁\", \"𑵀\"],\n  \"virama\": [\"𑵄\"],\n  \"consonants\": [\"𑴌\", \"𑴍\", \"𑴎\", \"𑴏\", \"𑴐\", \"𑴑\", \"𑴒\", \"𑴓\", \"𑴔\", \"𑴕\", \"𑴖\", \"𑴗\", \"𑴘\", \"𑴙\", \"𑴚\", \"𑴛\", \"𑴜\", \"𑴝\", \"𑴞\", \"𑴟\", \"𑴠\", \"𑴡\", \"𑴢\", \"𑴣\", \"𑴤\", \"𑴥\", \"𑴦\", \"𑴧\", \"𑴨\", \"𑴩\", \"𑴪\", \"𑴫\", \"𑴬\", \"𑴭\", \"𑴮\", \"𑴯\"],\n  \"symbols\": [\"𑵐\", \"𑵑\", \"𑵒\", \"𑵓\", \"𑵔\", \"𑵕\", \"𑵖\", \"𑵗\", \"𑵘\", \"𑵙\", \"𑴉𑵀\", \"\", \"।\", \"॥\"],\n  \"zwj\": [\"\\u200D\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"𑴺\"],\n  \"extra_consonants\": [\"𑴌𑵂\", \"𑴍𑵂\", \"𑴎𑵂\", \"𑴓𑵂\", \"𑴘𑵂\", \"𑴙𑵂\", \"𑴡𑵂\", \"𑴥𑵂\", \"𑴦𑵂\"]\n};\nschemes.grantha = {\n  \"vowels\": [\"𑌅\", \"𑌆\", \"𑌇\", \"𑌈\", \"𑌉\", \"𑌊\", \"𑌋\", \"𑍠\", \"𑌌\", \"𑍡\", \"𑌏𑌀\", \"𑌏\", \"𑌐\", \"𑌓𑌀\", \"𑌓\", \"𑌔\"],\n  \"vowel_marks\": [\"𑌾\", \"𑌿\", \"𑍀\", \"𑍁\", \"𑍂\", \"𑍃\", \"𑍄\", \"𑍢\", \"𑍣\", \"𑍇𑌀\", \"𑍇\", \"𑍈\", \"𑍋𑌀\", \"𑍋\", \"𑍗\"],\n  \"yogavaahas\": [\"𑌂\", \"𑌃\", \"𑌁\"],\n  \"virama\": [\"𑍍\"],\n  \"consonants\": [\"𑌕\", \"𑌖\", \"𑌗\", \"𑌘\", \"𑌙\", \"𑌚\", \"𑌛\", \"𑌜\", \"𑌝\", \"𑌞\", \"𑌟\", \"𑌠\", \"𑌡\", \"𑌢\", \"𑌣\", \"𑌤\", \"𑌥\", \"𑌦\", \"𑌧\", \"𑌨\", \"𑌪\", \"𑌫\", \"𑌬\", \"𑌭\", \"𑌮\", \"𑌯\", \"𑌰\", \"𑌲\", \"𑌵\", \"𑌶\", \"𑌷\", \"𑌸\", \"𑌹\", \"𑌳\", \"𑌕𑍍𑌷\", \"𑌜𑍍𑌞\"],\n  \"symbols\": [\"௦\", \"௧\", \"௨\", \"௩\", \"௪\", \"௫\", \"௬\", \"௭\", \"௮\", \"௯\", \"𑍐\", \"𑌽\", \"।\", \"॥\"],\n  \"candra\": [\"𑍇\"],\n  \"extra_consonants\": [\"𑌕𑌼\", \"𑌖𑌼\", \"𑌗𑌼\", \"𑌜𑌼\", \"𑌡𑌼\", \"𑌢𑌼\", \"𑌫𑌼\", \"𑌯𑌼\", \"𑌰𑌼\"]\n};\nschemes.grantha_pandya = {\n  \"vowels\": [\"അ\", \"ആ\", \"ഇ\", \"ഈ\", \"ഉ\", \"ഊ\", \"ഋ\", \"ൠ\", \"ഌ\", \"ൡ\", \"ഏ\", \"ഏ\", \"ഐ\", \"ഓ\", \"ഓ\", \"ഔ\"],\n  \"vowel_marks\": [\"ാ\", \"ി\", \"ീ\", \"ു\", \"ൂ\", \"ൃ\", \"ൄ\", \"ൢ\", \"ൣ\", \"േ\", \"േ\", \"ൈ\", \"ോ\", \"ോ\", \"ൗ\"],\n  \"yogavaahas\": [\"ം\", \"ഃ\", \"ം\"],\n  \"virama\": [\"്\"],\n  \"consonants\": [\"ക\", \"ഖ\", \"ഗ\", \"ഘ\", \"ങ\", \"ച\", \"ഛ\", \"ജ\", \"ഝ\", \"ഞ\", \"ട\", \"ഠ\", \"ഡ\", \"ഢ\", \"ണ\", \"ത\", \"ഥ\", \"ദ\", \"ധ\", \"ന\", \"പ\", \"ഫ\", \"ബ\", \"ഭ\", \"മ\", \"യ\", \"ര\", \"ല\", \"വ\", \"ശ\", \"ഷ\", \"സ\", \"ഹ\", \"ള\", \"ക്ഷ\", \"ജ്ഞ\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"ഓം\", \"ഽ\", \"।\", \"॥\"],\n  \"zwj\": [\"\\u200D\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"േ\"],\n  \"extra_consonants\": [\"ക\", \"ഖ\", \"ഗ\", \"ജ\", \"ഡ\", \"ഢ\", \"ഫ\", \"യ\", \"ര\"]\n};\nschemes.gujarati = {\n  \"vowels\": [\"અ\", \"આ\", \"ઇ\", \"ઈ\", \"ઉ\", \"ઊ\", \"ઋ\", \"ૠ\", \"ઌ\", \"ૡ\", \"ऎ\", \"એ\", \"ઐ\", \"ऒ\", \"ઓ\", \"ઔ\"],\n  \"vowel_marks\": [\"ા\", \"િ\", \"ી\", \"ુ\", \"ૂ\", \"ૃ\", \"ૄ\", \"ૢ\", \"ૣ\", \"ॆ\", \"ે\", \"ૈ\", \"ॊ\", \"ો\", \"ૌ\"],\n  \"yogavaahas\": [\"ં\", \"ઃ\", \"ઁ\"],\n  \"virama\": [\"્\"],\n  \"consonants\": [\"ક\", \"ખ\", \"ગ\", \"ઘ\", \"ઙ\", \"ચ\", \"છ\", \"જ\", \"ઝ\", \"ઞ\", \"ટ\", \"ઠ\", \"ડ\", \"ઢ\", \"ણ\", \"ત\", \"થ\", \"દ\", \"ધ\", \"ન\", \"પ\", \"ફ\", \"બ\", \"ભ\", \"મ\", \"ય\", \"ર\", \"લ\", \"વ\", \"શ\", \"ષ\", \"સ\", \"હ\", \"ળ\", \"ક્ષ\", \"જ્ઞ\"],\n  \"symbols\": [\"૦\", \"૧\", \"૨\", \"૩\", \"૪\", \"૫\", \"૬\", \"૭\", \"૮\", \"૯\", \"ૐ\", \"ઽ\", \"।\", \"॥\"],\n  \"zwj\": [\"\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"ૅ\"],\n  \"extra_consonants\": [\"ક઼\", \"ખ઼\", \"ગ઼\", \"જ઼\", \"ડ઼\", \"ઢ઼\", \"ફ઼\", \"ય઼\", \"ર઼\", \"ળ઼\"]\n};\nschemes.gurmukhi = {\n  \"vowels\": [\"ਅ\", \"ਆ\", \"ਇ\", \"ਈ\", \"ਉ\", \"ਊ\", \"\", \"\", \"\", \"\", \"\", \"ਏ\", \"ਐ\", \"\", \"ਓ\", \"ਔ\"],\n  \"vowel_marks\": [\"ਾ\", \"ਿ\", \"ੀ\", \"ੁ\", \"ੂ\", \"\", \"\", \"\", \"\", \"\", \"ੇ\", \"ੈ\", \"\", \"ੋ\", \"ੌ\"],\n  \"yogavaahas\": [\"ਂ\", \"ਃ\", \"ਁ\"],\n  \"virama\": [\"੍\"],\n  \"consonants\": [\"ਕ\", \"ਖ\", \"ਗ\", \"ਘ\", \"ਙ\", \"ਚ\", \"ਛ\", \"ਜ\", \"ਝ\", \"ਞ\", \"ਟ\", \"ਠ\", \"ਡ\", \"ਢ\", \"ਣ\", \"ਤ\", \"ਥ\", \"ਦ\", \"ਧ\", \"ਨ\", \"ਪ\", \"ਫ\", \"ਬ\", \"ਭ\", \"ਮ\", \"ਯ\", \"ਰ\", \"ਲ\", \"ਵ\", \"ਸ਼\", \"ਸ਼\", \"ਸ\", \"ਹ\", \"ਲ਼\", \"ਕ੍ਸ਼\", \"ਜ੍ਞ\"],\n  \"symbols\": [\"੦\", \"੧\", \"੨\", \"੩\", \"੪\", \"੫\", \"੬\", \"੭\", \"੮\", \"੯\", \"ॐ\", \"ऽ\", \"।\", \"॥\"],\n  \"extra_consonants\": [\"\", \"ਖ\", \"ਗ\", \"ਜ\", \"ਡ\", \"\", \"ਫ\", \"\", \"\"]\n};\nschemes.javanese = {\n  \"vowels\": [\"ꦄ\", \"ꦄꦴ\", \"ꦆ\", \"ꦇ\", \"ꦈ\", \"ꦈꦴ\", \"ꦉ\", \"ꦉꦴ\", \"ꦊ\", \"ꦋ\", \"\", \"ꦌ\", \"ꦍ\", \"\", \"ꦎ\", \"ꦎꦴ\"],\n  \"vowel_marks\": [\"ꦴ\", \"ꦶ\", \"ꦷ\", \"ꦸ\", \"ꦹ\", \"ꦽ\", \"꧀ꦉꦴ\", \"꧀ꦊ\", \"꧀ꦋ\", \"\", \"ꦺ\", \"ꦻ\", \"\", \"ꦺꦴ\", \"ꦻꦴ\"],\n  \"yogavaahas\": [\"ꦁ\", \"ꦃ\", \"ꦀ\"],\n  \"virama\": [\"꧀\"],\n  \"consonants\": [\"ꦏ\", \"ꦑ\", \"ꦒ\", \"ꦓ\", \"ꦔ\", \"ꦕ\", \"ꦖ\", \"ꦗ\", \"ꦙ\", \"ꦚ\", \"ꦛ\", \"ꦜ\", \"ꦝ\", \"ꦞ\", \"ꦟ\", \"ꦠ\", \"ꦡ\", \"ꦢ\", \"ꦣ\", \"ꦤ\", \"ꦥ\", \"ꦦ\", \"ꦧ\", \"ꦨ\", \"ꦩ\", \"ꦪ\", \"ꦫ\", \"ꦭ\", \"ꦮ\", \"ꦯ\", \"ꦰ\", \"ꦱ\", \"ꦲ\", \"ꦭ꦳\", \"ꦏ꧀ꦰ\", \"ꦗ꧀ꦚ\"],\n  \"symbols\": [\"꧐\", \"꧑\", \"꧒\", \"꧓\", \"꧔\", \"꧕\", \"꧖\", \"꧗\", \"꧘\", \"꧙\", \"ꦎꦀ\", \"'\", \"।\", \"॥\"],\n  \"candra\": [\"ꦼ\"]\n};\nschemes.kannada = {\n  \"vowels\": [\"ಅ\", \"ಆ\", \"ಇ\", \"ಈ\", \"ಉ\", \"ಊ\", \"ಋ\", \"ೠ\", \"ಌ\", \"ೡ\", \"ಎ\", \"ಏ\", \"ಐ\", \"ಒ\", \"ಓ\", \"ಔ\"],\n  \"vowel_marks\": [\"ಾ\", \"ಿ\", \"ೀ\", \"ು\", \"ೂ\", \"ೃ\", \"ೄ\", \"ೢ\", \"ೣ\", \"ೆ\", \"ೇ\", \"ೈ\", \"ೊ\", \"ೋ\", \"ೌ\"],\n  \"yogavaahas\": [\"ಂ\", \"ಃ\", \"ँ\"],\n  \"virama\": [\"್\"],\n  \"consonants\": [\"ಕ\", \"ಖ\", \"ಗ\", \"ಘ\", \"ಙ\", \"ಚ\", \"ಛ\", \"ಜ\", \"ಝ\", \"ಞ\", \"ಟ\", \"ಠ\", \"ಡ\", \"ಢ\", \"ಣ\", \"ತ\", \"ಥ\", \"ದ\", \"ಧ\", \"ನ\", \"ಪ\", \"ಫ\", \"ಬ\", \"ಭ\", \"ಮ\", \"ಯ\", \"ರ\", \"ಲ\", \"ವ\", \"ಶ\", \"ಷ\", \"ಸ\", \"ಹ\", \"ಳ\", \"ಕ್ಷ\", \"ಜ್ಞ\"],\n  \"symbols\": [\"೦\", \"೧\", \"೨\", \"೩\", \"೪\", \"೫\", \"೬\", \"೭\", \"೮\", \"೯\", \"ಓಂ\", \"ಽ\", \"।\", \"॥\"],\n  \"extra_consonants\": [\"ಕ಼\", \"ಖ಼\", \"ಗ಼\", \"ಜ಼\", \"ಡ಼\", \"ಢ಼\", \"ಫ಼\", \"ಯ಼\", \"ಱ\", \"ೞ\"]\n};\nschemes.khamti_shan = {\n  \"vowels\": [\"အ\", \"အႃ\", \"အိ\", \"အီ\", \"အု\", \"အူ\", \"ရိ\", \"ရီ\", \"လိ\", \"လီ\", \"\", \"အေ\", \"အႆ\", \"\", \"အူဝ်\", \"အဝ်\"],\n  \"vowel_marks\": [\"ႃ\", \"ိ\", \"ီ\", \"ု\", \"ူ\", \"်ရိ\", \"်ရီ\", \"်လိ\", \"်လီ\", \"\", \"ေ\", \"ႆ\", \"\", \"ူဝ်\", \"ဝ်\"],\n  \"yogavaahas\": [\"ံ\", \"း\", \"ံ\"],\n  \"virama\": [\"်\"],\n  \"consonants\": [\"က\", \"ၵ\", \"ꩠ\", \"ၷ\", \"င\", \"ꩡ\", \"ꩢ\", \"ꩣ\", \"ꩤ\", \"ꩥ\", \"ꩦ\", \"ꩧ\", \"ꩨ\", \"ꩩ\", \"ꧣ\", \"တ\", \"ထ\", \"ၻ\", \"ꩪ\", \"ꩫ\", \"ပ\", \"ၸ\", \"ၿ\", \"ၹ\", \"မ\", \"ယ\", \"ꩳ\", \"လ\", \"ဝ\", \"ꩬ\", \"ꩬ\", \"ꩬ\", \"ꩭ\", \"ꩮ\", \"က်ꩬ\", \"ꩣ်ꩥ\"],\n  \"symbols\": [\"႐\", \"႑\", \"႒\", \"႓\", \"႔\", \"႕\", \"႖\", \"႗\", \"႘\", \"႙\", \"အေႃံ\", \"'\", \"।\", \"॥\"],\n  \"candra\": [\"ႄ\"]\n};\nschemes.kharoshti = {\n  \"vowels\": [\"𐨀\", \"𐨀𐨌\", \"𐨀𐨁\", \"𐨀𐨁𐨌\", \"𐨀𐨂\", \"𐨀𐨂𐨌\", \"𐨀𐨃\", \"𐨀𐨃𐨌\", \"𐨫𐨂\", \"𐨫𐨂𐨌\", \"\", \"𐨀𐨅\", \"𐨀𐨅𐨌\", \"\", \"𐨀𐨆\", \"𐨀𐨆𐨌\"],\n  \"vowel_marks\": [\"𐨌\", \"𐨁\", \"𐨁𐨌\", \"𐨂\", \"𐨂𐨌\", \"𐨃\", \"𐨃𐨌\", \"𐨿𐨫𐨂\", \"𐨿𐨫𐨂𐨌\", \"\", \"𐨅\", \"𐨅𐨌\", \"\", \"𐨆\", \"𐨆𐨌\"],\n  \"yogavaahas\": [\"𐨎\", \"𐨏\", \"𐨎\"],\n  \"virama\": [\"𐨿\"],\n  \"consonants\": [\"𐨐\", \"𐨑\", \"𐨒\", \"𐨓\", \"𐨣\", \"𐨕\", \"𐨖\", \"𐨗\", \"𐨗\", \"𐨙\", \"𐨚\", \"𐨛\", \"𐨜\", \"𐨝\", \"𐨞\", \"𐨟\", \"𐨠\", \"𐨡\", \"𐨢\", \"𐨣\", \"𐨤\", \"𐨥\", \"𐨦\", \"𐨧\", \"𐨨\", \"𐨩\", \"𐨪\", \"𐨫\", \"𐨬\", \"𐨭\", \"𐨮\", \"𐨯\", \"𐨱\", \"𐨫\", \"𐨐𐨿𐨮\", \"𐨗𐨿𐨙\"],\n  \"symbols\": [\"\", \"𐩀\", \"𐩁\", \"𐩂\", \"𐩃\", \"𐩃𐩀\", \"𐩃𐩁\", \"𐩃𐩂\", \"𐩃𐩃\", \"𐩃𐩃𐩀\", \"𐨀𐨅𐨎\", \"\", \"।\", \"॥\"],\n  \"candra\": [\"𐨅\"]\n};\nschemes.khmer = {\n  \"vowels\": [\"អ\", \"អា\", \"ឥ\", \"ឦ\", \"ឧ\", \"ឩ\", \"ឫ\", \"ឬ\", \"ឭ\", \"ឮ\", \"\", \"ឯ\", \"ឰ\", \"\", \"ឱ\", \"ឳ\"],\n  \"vowel_marks\": [\"ា\", \"ិ\", \"ី\", \"ុ\", \"ូ\", \"្ឫ\", \"្ឬ\", \"្ឭ\", \"្ឮ\", \"\", \"េ\", \"ៃ\", \"\", \"ោ\", \"ៅ\"],\n  \"yogavaahas\": [\"ំ\", \"ះ\", \"ំ\"],\n  \"virama\": [\"៑\"],\n  \"consonants\": [\"ក\", \"ខ\", \"គ\", \"ឃ\", \"ង\", \"ច\", \"ឆ\", \"ជ\", \"ឈ\", \"ញ\", \"ដ\", \"ឋ\", \"ឌ\", \"ឍ\", \"ណ\", \"ត\", \"ថ\", \"ទ\", \"ធ\", \"ន\", \"ប\", \"ផ\", \"ព\", \"ភ\", \"ម\", \"យ\", \"រ\", \"ល\", \"វ\", \"ឝ\", \"ឞ\", \"ស\", \"ហ\", \"ឡ\", \"ក្ឞ\", \"ជ្ញ\"],\n  \"symbols\": [\"០\", \"១\", \"២\", \"៣\", \"៤\", \"៥\", \"៦\", \"៧\", \"៨\", \"៩\", \"ឱំ\", \"ៜ\", \"।\", \"॥\"],\n  \"candra\": [\"េ\"]\n};\nschemes.khom_thai = {\n  \"vowels\": [\"อ\", \"อา\", \"อิ\", \"อี\", \"อุ\", \"อู\", \"รุ\", \"รู\", \"ลุ\", \"ลู\", \"\", \"เอ\", \"อยฺ\", \"\", \"โอ\", \"อวฺ\"],\n  \"vowel_marks\": [\"า\", \"ิ\", \"ี\", \"ุ\", \"ู\", \"ฺฤ\", \"ฺฤๅ\", \"ฺลุ\", \"ฺลู\", \"\", \"เ\", \"ใ\", \"\", \"โ\", \"วฺ\"],\n  \"yogavaahas\": [\"ํ\", \"หฺ\", \"ํ\"],\n  \"virama\": [\"ฺ\"],\n  \"consonants\": [\"ก\", \"ข\", \"ค\", \"ฆ\", \"ง\", \"จ\", \"ฉ\", \"ช\", \"ฌ\", \"ญ\", \"ฏ\", \"ฐ\", \"ฑ\", \"ฒ\", \"ณ\", \"ต\", \"ถ\", \"ท\", \"ธ\", \"น\", \"ป\", \"ผ\", \"พ\", \"ภ\", \"ม\", \"ย\", \"ร\", \"ล\", \"ว\", \"ส\", \"ส\", \"ส\", \"ห\", \"ฬ\", \"กฺส\", \"ชฺญ\"],\n  \"symbols\": [\"๐\", \"๑\", \"๒\", \"๓\", \"๔\", \"๕\", \"๖\", \"๗\", \"๘\", \"๙\", \"โอํ\", \"\", \"।\", \"॥\"],\n  \"candra\": [\"แ\"]\n};\nschemes.khudawadi = {\n  \"vowels\": [\"𑊰\", \"𑊱\", \"𑊲\", \"𑊳\", \"𑊴\", \"𑊵\", \"𑋙𑋡\", \"𑋙𑋢\", \"𑋚𑋡\", \"𑋚𑋢\", \"\", \"𑊶\", \"𑊷\", \"\", \"𑊸\", \"𑊹\"],\n  \"vowel_marks\": [\"𑋠\", \"𑋡\", \"𑋢\", \"𑋣\", \"𑋤\", \"𑋪𑋙𑋡\", \"𑋪𑋙𑋢\", \"𑋪𑋚𑋡\", \"𑋪𑋚𑋢\", \"\", \"𑋥\", \"𑋦\", \"\", \"𑋧\", \"𑋨\"],\n  \"yogavaahas\": [\"𑋟\", \"𑋞𑋪\", \"𑋟\"],\n  \"virama\": [\"𑋪\"],\n  \"consonants\": [\"𑊺\", \"𑊻\", \"𑊼\", \"𑊾\", \"𑊿\", \"𑋀\", \"𑋁\", \"𑋂\", \"𑋄\", \"𑋅\", \"𑋆\", \"𑋇\", \"𑋈\", \"𑋋\", \"𑋌\", \"𑋍\", \"𑋎\", \"𑋏\", \"𑋐\", \"𑋑\", \"𑋒\", \"𑋓\", \"𑋔\", \"𑋖\", \"𑋗\", \"𑋘\", \"𑋙\", \"𑋚\", \"𑋛\", \"𑋜\", \"𑋜𑋩\", \"𑋝\", \"𑋞\", \"𑋚𑋩\", \"𑊺𑋪𑋜𑋩\", \"𑋂𑋪𑋅\"],\n  \"symbols\": [\"𑋰\", \"𑋱\", \"𑋲\", \"𑋳\", \"𑋴\", \"𑋵\", \"𑋶\", \"𑋷\", \"𑋸\", \"𑋹\", \"𑊸𑋟\", \"ऽ\", \"।\", \"॥\"],\n  \"candra\": [\"𑋥\"]\n};\nschemes.lao = {\n  \"vowels\": [\"ອະ\", \"ອາ\", \"ອິ\", \"ອີ\", \"ອຸ\", \"ອູ\", \"ຣຸ\", \"ຣູ\", \"ລຸ\", \"ລູ\", \"\", \"ເອ\", \"ໄອ\", \"\", \"ໂອ\", \"ເອົາ\"],\n  \"vowel_marks\": [\"າ\", \"ິ\", \"ີ\", \"ຸ\", \"ູ\", \"ຣຸ\", \"ຣູ\", \"ລຸ\", \"ລູ\", \"\", \"ເ\", \"ໄ\", \"\", \"ໂ\", \"ເົາ\"],\n  \"yogavaahas\": [\"ງ\", \"ຫ\", \"ງ\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"ກະ\", \"ຂະ\", \"ຄະ\", \"ຄະ\", \"ງະ\", \"ຈະ\", \"ຈະ\", \"ຊະ\", \"ຊະ\", \"ຍະ\", \"ຕະ\", \"ຖະ\", \"ທະ\", \"ທະ\", \"ນະ\", \"ຕະ\", \"ຖະ\", \"ທະ\", \"ທະ\", \"ນະ\", \"ປະ\", \"ຜະ\", \"ພະ\", \"ພະ\", \"ມະ\", \"ຢະ\", \"ຣະ\", \"ລະ\", \"ວະ\", \"ສະ\", \"ສະ\", \"ສະ\", \"ຫະ\", \"ລະ\", \"ກສະ\", \"ຊຍະ\"],\n  \"symbols\": [\"໐\", \"໑\", \"໒\", \"໓\", \"໔\", \"໕\", \"໖\", \"໗\", \"໘\", \"໙\", \"ໂອງ\", \"'\", \"।\", \"॥\"],\n  \"candra\": [\"ແະ\"]\n};\nschemes.lao_pali = {\n  \"vowels\": [\"ອ\", \"ອາ\", \"ອິ\", \"ອີ\", \"ອຸ\", \"ອູ\", \"ຣຸ\", \"ຣູ\", \"ລຸ\", \"ລູ\", \"\", \"ເອ\", \"ໄອ\", \"\", \"ໂອ\", \"ເອົາ\"],\n  \"vowel_marks\": [\"າ\", \"ິ\", \"ີ\", \"ຸ\", \"ູ\", \"຺ຣຸ\", \"຺ຣູ\", \"຺ລຸ\", \"຺ລູ\", \"\", \"ເ\", \"ໄ\", \"\", \"ໂ\", \"ເົາ\"],\n  \"yogavaahas\": [\"ໍ\", \"ຫ໌\", \"ໍ\"],\n  \"virama\": [\"຺\"],\n  \"consonants\": [\"ກ\", \"ຂ\", \"ຄ\", \"ຆ\", \"ງ\", \"ຈ\", \"ຉ\", \"ຊ\", \"ຌ\", \"ຎ\", \"ຏ\", \"ຐ\", \"ຑ\", \"ຒ\", \"ຓ\", \"ຕ\", \"ຖ\", \"ທ\", \"ຘ\", \"ນ\", \"ປ\", \"ຜ\", \"ພ\", \"ຠ\", \"ມ\", \"ຍ\", \"ຣ\", \"ລ\", \"ວ\", \"ຨ\", \"ຩ\", \"ສ\", \"ຫ\", \"ຬ\", \"ກ຺ຩ\", \"ຊ຺ຎ\"],\n  \"symbols\": [\"໐\", \"໑\", \"໒\", \"໓\", \"໔\", \"໕\", \"໖\", \"໗\", \"໘\", \"໙\", \"ໂອໍ\", \"'\", \"।\", \"॥\"],\n  \"candra\": [\"ແະ\"]\n};\nschemes.lepcha = {\n  \"vowels\": [\"ᰣ\", \"ᰣᰦ\", \"ᰣᰧ\", \"ᰣᰧᰶ\", \"ᰣᰪ\", \"ᰣᰫ\", \"ᰛᰪ\", \"ᰛᰫ\", \"ᰜᰪ\", \"ᰜᰫ\", \"\", \"ᰣᰬ\", \"ᰣᰬ\", \"\", \"ᰣᰨ\", \"ᰣᰩ\"],\n  \"vowel_marks\": [\"ᰦ\", \"ᰧ\", \"ᰧᰶ\", \"ᰪ\", \"ᰫ\", \"ᰥᰪ\", \"ᰥᰫ\", \"ᰜᰪ\", \"ᰜᰫ\", \"\", \"ᰬ\", \"ᰬ\", \"\", \"ᰨ\", \"ᰩ\"],\n  \"yogavaahas\": [\"ᰴ\", \"ᰝ\", \"ᰴ\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"ᰀ\", \"ᰂ\", \"ᰃ\", \"ᰃ\", \"ᰅ\", \"ᰆ\", \"ᰇ\", \"ᰈ\", \"ᰈ\", \"ᰉ\", \"ᱍ\", \"ᱎ\", \"ᱏ\", \"ᱏ\", \"ᰍ\", \"ᰊ\", \"ᰋ\", \"ᰌ\", \"ᰌ\", \"ᰍ\", \"ᰎ\", \"ᰐ\", \"ᰓ\", \"ᰓ\", \"ᰕ\", \"ᰚ\", \"ᰛ\", \"ᰜ\", \"ᰟ\", \"ᰡ\", \"ᰡ᰷\", \"ᰠ\", \"ᰝ\", \"ᰜ᰷\", \"ᰀᰡ᰷\", \"ᰈᰉ\"],\n  \"symbols\": [\"᱀\", \"᱁\", \"᱂\", \"᱃\", \"᱄\", \"᱅\", \"᱆\", \"᱇\", \"᱈\", \"᱉\", \"ᰣᰨᰵ\", \"'\", \"।\", \"॥\"],\n  \"candra\": [\"ᰬ\"]\n};\nschemes.limbu = {\n  \"vowels\": [\"ᤀ\", \"ᤀᤠ\", \"ᤀᤡ\", \"ᤀᤡ᤺\", \"ᤀᤢ\", \"ᤀ᤺ᤢ\", \"ᤖᤢ\", \"ᤖ᤺ᤢ\", \"ᤗᤢ\", \"ᤗ᤺ᤢ\", \"\", \"ᤀᤣ\", \"ᤀᤤ\", \"\", \"ᤀᤥ\", \"ᤀᤦ\"],\n  \"vowel_marks\": [\"ᤠ\", \"ᤡ\", \"ᤡ᤺\", \"ᤢ\", \"᤺ᤢ\", \"ᤪᤢ\", \"ᤪ᤺ᤢ\", \"᤻ᤗᤢ\", \"᤻ᤗ᤺ᤢ\", \"\", \"ᤣ\", \"ᤤ\", \"\", \"ᤥ\", \"ᤦ\"],\n  \"yogavaahas\": [\"ᤱ\", \"ᤜ᤻\", \"ᤱ\"],\n  \"virama\": [\"᤻\"],\n  \"consonants\": [\"ᤁ\", \"ᤂ\", \"ᤃ\", \"ᤄ\", \"ᤅ\", \"ᤆ\", \"ᤇ\", \"ᤈ\", \"ᤈ\", \"ᤏ\", \"ᤋ\", \"ᤌ\", \"ᤍ\", \"ᤎ\", \"ᤏ\", \"ᤋ\", \"ᤌ\", \"ᤍ\", \"ᤎ\", \"ᤏ\", \"ᤐ\", \"ᤑ\", \"ᤒ\", \"ᤓ\", \"ᤔ\", \"ᤕ\", \"ᤖ\", \"ᤗ\", \"ᤘ\", \"ᤙ\", \"ᤙ\", \"ᤛ\", \"ᤜ\", \"ᤗ\", \"ᤁ᤻ᤙ\", \"ᤈ᤻ᤏ\"],\n  \"symbols\": [\"᥆\", \"᥇\", \"᥈\", \"᥉\", \"᥊\", \"᥋\", \"᥌\", \"᥍\", \"᥎\", \"᥏\", \"ᤀᤥᤱ\", \"'\", \"।\", \"॥\"],\n  \"candra\": [\"ᤧ\"]\n};\nschemes.mahajani = {\n  \"vowels\": [\"𑅐\", \"𑅐\", \"𑅑\", \"𑅑\", \"𑅒\", \"𑅒\", \"𑅭𑅒\", \"𑅭𑅒\", \"𑅮𑅒\", \"𑅮𑅒\", \"𑅓\", \"𑅓\", \"𑅑\", \"𑅔\", \"𑅔\", \"𑅒\"],\n  \"vowel_marks\": [\"𑅐\", \"𑅑\", \"𑅑\", \"𑅒\", \"𑅒\", \"𑅭𑅒\", \"𑅭𑅒\", \"𑅮𑅒\", \"𑅮𑅒\", \"𑅓\", \"𑅓\", \"𑅑\", \"𑅔\", \"𑅔\", \"𑅒\"],\n  \"yogavaahas\": [\"𑅧\", \"𑅱\", \"𑅧\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"𑅕\", \"𑅖\", \"𑅗\", \"𑅘\", \"𑅧\", \"𑅙\", \"𑅚\", \"𑅛\", \"𑅜\", \"𑅝\", \"𑅞\", \"𑅟\", \"𑅠\", \"𑅡\", \"𑅢\", \"𑅣\", \"𑅤\", \"𑅥\", \"𑅦\", \"𑅧\", \"𑅨\", \"𑅩\", \"𑅪\", \"𑅫\", \"𑅬\", \"𑅛\", \"𑅭\", \"𑅮\", \"𑅯\", \"𑅰𑅳\", \"𑅖𑅳\", \"𑅰\", \"𑅱\", \"𑅮𑅳\", \"𑅕𑅖𑅳\", \"𑅛𑅝\"],\n  \"symbols\": [\"०\", \"१\", \"२\", \"३\", \"४\", \"५\", \"६\", \"७\", \"८\", \"९\", \"𑅔𑅬\", \"\", \"।\", \"॥\"],\n  \"zwj\": [\"\\u200D\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"𑅓\"],\n  \"extra_consonants\": [\"𑅕𑅳\", \"𑅖𑅳\", \"𑅗𑅳\", \"𑅛𑅳\", \"𑅲\", \"𑅡𑅳\", \"𑅩𑅳\", \"𑅛\", \"𑅭𑅳\"]\n};\nschemes.malayalam = {\n  \"vowels\": [\"അ\", \"ആ\", \"ഇ\", \"ഈ\", \"ഉ\", \"ഊ\", \"ഋ\", \"ൠ\", \"ഌ\", \"ൡ\", \"എ\", \"ഏ\", \"ഐ\", \"ഒ\", \"ഓ\", \"ഔ\"],\n  \"vowel_marks\": [\"ാ\", \"ി\", \"ീ\", \"ു\", \"ൂ\", \"ൃ\", \"ൄ\", \"ൢ\", \"ൣ\", \"െ\", \"േ\", \"ൈ\", \"ൊ\", \"ോ\", \"ൌ\"],\n  \"yogavaahas\": [\"ം\", \"ഃ\", \"ँ\"],\n  \"virama\": [\"്\"],\n  \"consonants\": [\"ക\", \"ഖ\", \"ഗ\", \"ഘ\", \"ങ\", \"ച\", \"ഛ\", \"ജ\", \"ഝ\", \"ഞ\", \"ട\", \"ഠ\", \"ഡ\", \"ഢ\", \"ണ\", \"ത\", \"ഥ\", \"ദ\", \"ധ\", \"ന\", \"പ\", \"ഫ\", \"ബ\", \"ഭ\", \"മ\", \"യ\", \"ര\", \"ല\", \"വ\", \"ശ\", \"ഷ\", \"സ\", \"ഹ\", \"ള\", \"ക്ഷ\", \"ജ്ഞ\"],\n  \"symbols\": [\"൦\", \"൧\", \"൨\", \"൩\", \"൪\", \"൫\", \"൬\", \"൭\", \"൮\", \"൯\", \"ഓം\", \"ഽ\", \"।\", \"॥\"],\n  \"extra_consonants\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"റ\", \"ഴ\"]\n};\nschemes.manipuri = {\n  \"vowels\": [\"ꯑ\", \"ꯑꯥ\", \"ꯏ\", \"ꯏ\", \"ꯎ\", \"ꯎ\", \"ꯔꯨ\", \"ꯔꯨ\", \"ꯂꯨ\", \"ꯂꯨ\", \"\", \"ꯑꯦ\", \"ꯑꯩ\", \"\", \"ꯑꯣ\", \"ꯑꯧ\"],\n  \"vowel_marks\": [\"ꯥ\", \"ꯤ\", \"ꯤ\", \"ꯨ\", \"ꯨ\", \"꯭ꯔꯨ\", \"꯭ꯔꯨ\", \"꯭ꯂꯨ\", \"꯭ꯂꯨ\", \"\", \"ꯦ\", \"ꯩ\", \"\", \"ꯣ\", \"ꯧ\"],\n  \"yogavaahas\": [\"ꯪ\", \"ꯍ꯭\", \"ꯪ\"],\n  \"virama\": [\"꯭\"],\n  \"consonants\": [\"ꯀ\", \"ꯈ\", \"ꯒ\", \"ꯘ\", \"ꯉ\", \"ꯆ\", \"ꯆ\", \"ꯖ\", \"ꯓ\", \"ꯅ\", \"ꯇ\", \"ꯊ\", \"ꯗ\", \"ꯙ\", \"ꯅ\", \"ꯇ\", \"ꯊ\", \"ꯗ\", \"ꯙ\", \"ꯅ\", \"ꯄ\", \"ꯐ\", \"ꯕ\", \"ꯚ\", \"ꯃ\", \"ꯌ\", \"ꯔ\", \"ꯂ\", \"ꯋ\", \"ꯁ\", \"ꯁ\", \"ꯁ\", \"ꯍ\", \"ꯂ\", \"ꯛꯁ\", \"ꯖ꯭ꯅ\"],\n  \"symbols\": [\"꯰\", \"꯱\", \"꯲\", \"꯳\", \"꯴\", \"꯵\", \"꯶\", \"꯷\", \"꯸\", \"꯹\", \"ꯑꯣꯪ\", \"'\", \"।\", \"॥\"],\n  \"candra\": [\"ꯦ\"]\n};\nschemes.marchen = {\n  \"vowels\": [\"𑲏\", \"𑲏𑲰\", \"𑲏𑲱\", \"𑲏𑲱𑲰\", \"𑲏𑲲\", \"𑲏𑲲𑲰\", \"𑲊𑲱\", \"𑲊𑲱𑲰\", \"𑲋𑲱\", \"𑲋𑲱𑲰\", \"\", \"𑲏𑲳\", \"𑲏𑲳𑲰\", \"\", \"𑲏𑲴\", \"𑲏𑲰𑲴\"],\n  \"vowel_marks\": [\"𑲰\", \"𑲱\", \"𑲱𑲰\", \"𑲲\", \"𑲲𑲰\", \"𑲪𑲱\", \"𑲪𑲱𑲰\", \"𑲫𑲱\", \"𑲫𑲱𑲰\", \"\", \"𑲳\", \"𑲳𑲰\", \"\", \"𑲴\", \"𑲰𑲴\"],\n  \"yogavaahas\": [\"𑲵\", \"𑲎\", \"𑲶\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"𑱲\", \"𑱳\", \"𑱴\", \"𑱴𑲮\", \"𑱵\", \"𑲂\", \"𑲃\", \"𑲄\", \"𑲄𑲮\", \"𑱹\", \"𑱺\", \"𑱻\", \"𑱼\", \"𑱼𑲮\", \"𑱽\", \"𑱺\", \"𑱻\", \"𑱼\", \"𑱼𑲮\", \"𑱽\", \"𑱾\", \"𑱿\", \"𑲀\", \"𑲀𑲮\", \"𑲁\", \"𑲉\", \"𑲊\", \"𑲋\", \"𑲅\", \"𑲌\", \"𑲌\", \"𑲍\", \"𑲎\", \"𑲋\", \"𑱲𑲬\", \"𑲄𑲙\"],\n  \"symbols\": [\"༠\", \"༡\", \"༢\", \"༣\", \"༤\", \"༥\", \"༦\", \"༧\", \"༨\", \"༩\", \"𑲏𑲴𑲶\", \"\", \"।\", \"॥\"],\n  \"candra\": [\"𑲳\"]\n};\nschemes.modi = {\n  \"vowels\": [\"𑘀\", \"𑘁\", \"𑘃\", \"𑘃\", \"𑘄\", \"𑘄\", \"𑘨𑘲\", \"𑘨𑘲\", \"𑘩𑘲\", \"𑘩𑘲\", \"\", \"𑘊\", \"𑘋\", \"\", \"𑘌\", \"𑘍\"],\n  \"vowel_marks\": [\"𑘰\", \"𑘲\", \"𑘲\", \"𑘳\", \"𑘳\", \"𑘿𑘨𑘲\", \"𑘿𑘨𑘲\", \"𑘿𑘩𑘲\", \"𑘿𑘩𑘲\", \"\", \"𑘹\", \"𑘺\", \"\", \"𑘻\", \"𑘼\"],\n  \"yogavaahas\": [\"𑘽\", \"𑘾\", \"𑘽\"],\n  \"virama\": [\"𑘿\"],\n  \"consonants\": [\"𑘎\", \"𑘏\", \"𑘐\", \"𑘑\", \"𑘒\", \"𑘓\", \"𑘔\", \"𑘕\", \"𑘖\", \"𑘗\", \"𑘘\", \"𑘙\", \"𑘚\", \"𑘛\", \"𑘜\", \"𑘝\", \"𑘞\", \"𑘟\", \"𑘠\", \"𑘡\", \"𑘢\", \"𑘣\", \"𑘤\", \"𑘥\", \"𑘦\", \"𑘧\", \"𑘨\", \"𑘩\", \"𑘪\", \"𑘫\", \"𑘬\", \"𑘭\", \"𑘮\", \"𑘯\", \"𑘎𑘿𑘬\", \"𑘕𑘿𑘗\"],\n  \"symbols\": [\"𑙐\", \"𑙑\", \"𑙒\", \"𑙓\", \"𑙔\", \"𑙕\", \"𑙖\", \"𑙗\", \"𑙘\", \"𑙙\", \"𑘌𑘽\", \"ऽ\", \"।\", \"॥\"],\n  \"candra\": [\"𑙀\"]\n};\nschemes.mon = {\n  \"vowels\": [\"အ\", \"အာ\", \"ဣ\", \"ဣဳ\", \"ဥ\", \"ဥူ\", \"ၒ\", \"ၓ\", \"ၔ\", \"ၕ\", \"\", \"ဨ\", \"အဲ\", \"\", \"ဩ\", \"ဪ\"],\n  \"vowel_marks\": [\"ာ\", \"ိ\", \"ဳ\", \"ု\", \"ူ\", \"ၖ\", \"ၗ\", \"ၘ\", \"ၙ\", \"\", \"ေ\", \"ဲ\", \"\", \"ော\", \"ော်\"],\n  \"yogavaahas\": [\"ံ\", \"း\", \"ံ\"],\n  \"virama\": [\"်\"],\n  \"consonants\": [\"က\", \"ခ\", \"ဂ\", \"ဃ\", \"ၚ\", \"စ\", \"ဆ\", \"ဇ\", \"ၛ\", \"ည\", \"ဋ\", \"ဌ\", \"ဍ\", \"ဎ\", \"ဏ\", \"တ\", \"ထ\", \"ဒ\", \"ဓ\", \"န\", \"ပ\", \"ဖ\", \"ဗ\", \"ဘ\", \"မ\", \"ယ\", \"ရ\", \"လ\", \"ဝ\", \"ၐ\", \"ၑ\", \"သ\", \"ဟ\", \"ဠ\", \"က္ၑ\", \"ဇ္ည\"],\n  \"symbols\": [\"၀\", \"၁\", \"၂\", \"၃\", \"၄\", \"၅\", \"၆\", \"၇\", \"၈\", \"၉\", \"ဩံ\", \"'\", \"।\", \"॥\"],\n  \"candra\": [\"ေ\"]\n};\nschemes.mro = {\n  \"vowels\": [\"𖩒\", \"𖩆\", \"𖩊\", \"𖩊\", \"𖩑\", \"𖩑\", \"𖩓𖩑\", \"𖩓𖩑\", \"𖩍𖩑\", \"𖩍𖩑\", \"\", \"𖩘\", \"𖩆𖩂\", \"\", \"𖩑\", \"𖩖\"],\n  \"vowel_marks\": [\"𖩆\", \"𖩊\", \"𖩊\", \"𖩑\", \"𖩑\", \"𖩓𖩑\", \"𖩓𖩑\", \"𖩍𖩑\", \"𖩍𖩑\", \"\", \"𖩘\", \"𖩆𖩂\", \"\", \"𖩑\", \"𖩖\"],\n  \"yogavaahas\": [\"𖩃\", \"𖩉\", \"𖩃\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"𖩌𖩒\", \"𖩈𖩒\", \"𖩌𖩒\", \"𖩈𖩒\", \"𖩁𖩒\", \"𖩋𖩒\", \"𖩋𖩒\", \"𖩋𖩒\", \"𖩋𖩒\", \"𖩏𖩒\", \"𖩀𖩒\", \"𖩕𖩒\", \"𖩅𖩒\", \"𖩅𖩒\", \"𖩏𖩒\", \"𖩀𖩒\", \"𖩕𖩒\", \"𖩅𖩒\", \"𖩅𖩒\", \"𖩏𖩒\", \"𖩐𖩒\", \"𖩇𖩒\", \"𖩄𖩒\", \"𖩄𖩒\", \"𖩃𖩒\", \"𖩂𖩒\", \"𖩓𖩒\", \"𖩍𖩒\", \"𖩗𖩒\", \"𖩔𖩒\", \"𖩔𖩒\", \"𖩔𖩒\", \"𖩉𖩒\", \"𖩍𖩒\", \"𖩌𖩔𖩒\", \"𖩋𖩏𖩒\"],\n  \"symbols\": [\"𖩠\", \"𖩡\", \"𖩢\", \"𖩣\", \"𖩤\", \"𖩥\", \"𖩦\", \"𖩧\", \"𖩨\", \"𖩩\", \"𖩑𖩃\", \"\", \"।\", \"॥\"],\n  \"candra\": [\"𖩘\"]\n};\nschemes.multani = {\n  \"vowels\": [\"𑊀\", \"𑊀\", \"𑊁\", \"𑊁\", \"𑊂\", \"𑊂\", \"𑊢𑊂\", \"𑊢𑊂\", \"𑊣𑊂\", \"𑊣𑊂\", \"\", \"𑊃\", \"𑊃\", \"\", \"𑊂\", \"𑊂\"],\n  \"vowel_marks\": [\"𑊀\", \"𑊁\", \"𑊁\", \"𑊂\", \"𑊂\", \"𑊢𑊂\", \"𑊢𑊂\", \"𑊣𑊂\", \"𑊣𑊂\", \"\", \"𑊃\", \"𑊃\", \"\", \"𑊂\", \"𑊂\"],\n  \"yogavaahas\": [\"𑊚\", \"𑊦\", \"𑊚\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"𑊄\", \"𑊅\", \"𑊆\", \"𑊈\", \"𑊚\", \"𑊊\", \"𑊋\", \"𑊌\", \"𑊌\", \"𑊏\", \"𑊐\", \"𑊑\", \"𑊒\", \"𑊔\", \"𑊕\", \"𑊖\", \"𑊗\", \"𑊘\", \"𑊙\", \"𑊚\", \"𑊛\", \"𑊜\", \"𑊝\", \"𑊟\", \"𑊠\", \"𑊡\", \"𑊢\", \"𑊣\", \"𑊤\", \"𑊥\", \"𑊥\", \"𑊥\", \"𑊦\", \"𑊣\", \"𑊄𑊥\", \"𑊌𑊏\"],\n  \"symbols\": [\"੦\", \"੧\", \"੨\", \"੩\", \"੪\", \"੫\", \"੬\", \"੭\", \"੮\", \"੯\", \"𑊂𑊠\", \"\", \"।\", \"॥\"],\n  \"candra\": [\"𑊃\"]\n};\nschemes.newa = {\n  \"vowels\": [\"𑐀\", \"𑐁\", \"𑐂\", \"𑐃\", \"𑐄\", \"𑐅\", \"𑐆\", \"𑐇\", \"𑐈\", \"𑐉\", \"\", \"𑐊\", \"𑐋\", \"\", \"𑐌\", \"𑐍\"],\n  \"vowel_marks\": [\"𑐵\", \"𑐶\", \"𑐷\", \"𑐸\", \"𑐹\", \"𑐺\", \"𑐻\", \"𑐼\", \"𑐽\", \"\", \"𑐾\", \"𑐿\", \"\", \"𑑀\", \"𑑁\"],\n  \"yogavaahas\": [\"𑑄\", \"𑑅\", \"𑑃\"],\n  \"virama\": [\"𑑂\"],\n  \"consonants\": [\"𑐎\", \"𑐏\", \"𑐐\", \"𑐑\", \"𑐒\", \"𑐔\", \"𑐕\", \"𑐖\", \"𑐗\", \"𑐘\", \"𑐚\", \"𑐛\", \"𑐜\", \"𑐝\", \"𑐞\", \"𑐟\", \"𑐠\", \"𑐡\", \"𑐢\", \"𑐣\", \"𑐥\", \"𑐦\", \"𑐧\", \"𑐨\", \"𑐩\", \"𑐫\", \"𑐬\", \"𑐮\", \"𑐰\", \"𑐱\", \"𑐲\", \"𑐳\", \"𑐴\", \"𑐮𑑆\", \"𑐎𑑂𑐲\", \"𑐖𑑂𑐘\"],\n  \"symbols\": [\"𑑐\", \"𑑑\", \"𑑒\", \"𑑓\", \"𑑔\", \"𑑕\", \"𑑖\", \"𑑗\", \"𑑘\", \"𑑙\", \"𑑉\", \"𑑇\", \"।\", \"॥\"],\n  \"candra\": [\"𑐾\"]\n};\nschemes.ol_chiki = {\n  \"vowels\": [\"ᱚ\", \"ᱟ\", \"ᱤ\", \"ᱤᱻ\", \"ᱩ\", \"ᱩᱻ\", \"ᱨᱩ\", \"ᱨᱩᱻ\", \"ᱞᱩ\", \"ᱞᱩᱻ\", \"ᱮᱹ\", \"ᱮ\", \"ᱚᱤ\", \"ᱳ\", \"ᱳ\", \"ᱚᱩ\"],\n  \"vowel_marks\": [\"ᱟ\", \"ᱤ\", \"ᱤᱻ\", \"ᱩ\", \"ᱩᱻ\", \"ᱨᱩ\", \"ᱨᱩᱻ\", \"ᱞᱩ\", \"ᱞᱩᱻ\", \"ᱮᱹ\", \"ᱮ\", \"ᱚᱤ\", \"ᱳ\", \"ᱳ\", \"ᱚᱩ\"],\n  \"yogavaahas\": [\"ᱝ\", \"ᱷ\", \"ᱸ\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"ᱠᱚ\", \"ᱠᱷᱚ\", \"ᱜᱚ\", \"ᱜᱷᱚ\", \"ᱶᱚ\", \"ᱪᱚ\", \"ᱪᱷᱚ\", \"ᱡᱚ\", \"ᱡᱷᱚ\", \"ᱧᱚ\", \"ᱴᱚ\", \"ᱴᱷᱚ\", \"ᱰᱚ\", \"ᱰᱷᱚ\", \"ᱬᱚ\", \"ᱛᱚ\", \"ᱛᱷᱚ\", \"ᱫᱚ\", \"ᱫᱷᱚ\", \"ᱱᱚ\", \"ᱯᱚ\", \"ᱯᱷᱚ\", \"ᱵᱚ\", \"ᱵᱷᱚ\", \"ᱢᱚ\", \"ᱭᱚ\", \"ᱨᱚ\", \"ᱞᱚ\", \"ᱣᱚ\", \"ᱥᱚ\", \"ᱥᱚ\", \"ᱥᱚ\", \"ᱦᱚ\", \"ᱞᱚ\", \"ᱠᱥᱚ\", \"ᱡᱧᱚ\"],\n  \"symbols\": [\"᱐\", \"᱑\", \"᱒\", \"᱓\", \"᱔\", \"᱕\", \"᱖\", \"᱗\", \"᱘\", \"᱙\", \"ᱳᱸ\", \"'\", \"᱾\", \"᱿\"],\n  \"candra\": [\"ᱚᱹ\"],\n  \"extra_consonants\": [\"ᱠᱚ\", \"ᱠᱷᱚ\", \"ᱜᱚ\", \"ᱡᱚ\", \"ᱲᱚ\", \"ᱲᱷᱚ\", \"ᱯᱚ\", \"ᱭᱚ\", \"ᱨᱚ\"]\n};\nschemes.oriya = {\n  \"vowels\": [\"ଅ\", \"ଆ\", \"ଇ\", \"ଈ\", \"ଉ\", \"ଊ\", \"ଋ\", \"ୠ\", \"ଌ\", \"ୡ\", \"ऎ\", \"ଏ\", \"ଐ\", \"ऒ\", \"ଓ\", \"ଔ\"],\n  \"vowel_marks\": [\"ା\", \"ି\", \"ୀ\", \"ୁ\", \"ୂ\", \"ୃ\", \"ୄ\", \"ୢ\", \"ୣ\", \"ॆ\", \"େ\", \"ୈ\", \"ॊ\", \"ୋ\", \"ୌ\"],\n  \"yogavaahas\": [\"ଂ\", \"ଃ\", \"ଁ\"],\n  \"virama\": [\"୍\"],\n  \"consonants\": [\"କ\", \"ଖ\", \"ଗ\", \"ଘ\", \"ଙ\", \"ଚ\", \"ଛ\", \"ଜ\", \"ଝ\", \"ଞ\", \"ଟ\", \"ଠ\", \"ଡ\", \"ଢ\", \"ଣ\", \"ତ\", \"ଥ\", \"ଦ\", \"ଧ\", \"ନ\", \"ପ\", \"ଫ\", \"ବ\", \"ଭ\", \"ମ\", \"ଯ\", \"ର\", \"ଲ\", \"ଵ\", \"ଶ\", \"ଷ\", \"ସ\", \"ହ\", \"ଳ\", \"କ୍ଷ\", \"ଜ୍ଞ\"],\n  \"symbols\": [\"୦\", \"୧\", \"୨\", \"୩\", \"୪\", \"୫\", \"୬\", \"୭\", \"୮\", \"୯\", \"ଓଁ\", \"ଽ\", \"।\", \"॥\"],\n  \"zwj\": [\"\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"େ\"],\n  \"extra_consonants\": [\"କ଼\", \"ଖ଼\", \"ଗ଼\", \"ଜ଼\", \"ଡ଼\", \"ଢ଼\", \"ଫ଼\", \"ୟ\", \"ର଼\", \"ଳ଼\"]\n};\nschemes.persian_old = {\n  \"vowels\": [\"𐎠\", \"𐎠\", \"𐎡\", \"𐎡\", \"𐎢\", \"𐎢\", \"𐎽𐎢\", \"𐎽𐎢\", \"𐎾𐎢\", \"𐎾𐎢\", \"\", \"𐎡\", \"𐎠𐎡\", \"\", \"𐎢\", \"𐎠𐎢\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"𐎣\", \"𐎧\", \"𐎥\", \"𐎥\", \"𐎴\", \"𐎨\", \"𐎨\", \"𐎩\", \"𐎩\", \"𐎴\", \"𐎫\", \"𐎫\", \"𐎭\", \"𐎭\", \"𐎴\", \"𐎫\", \"𐎰\", \"𐎭\", \"𐎭\", \"𐎴\", \"𐎱\", \"𐎱\", \"𐎲\", \"𐎲\", \"𐎶\", \"𐎹\", \"𐎼\", \"𐎾\", \"𐎺\", \"𐏁\", \"𐏂\", \"𐎿\", \"𐏃\", \"𐎾\", \"𐎣𐏂\", \"𐎩𐎴\"],\n  \"symbols\": [\"\", \"𐏑\", \"𐏒\", \"𐏒𐏑\", \"𐏒𐏒\", \"𐏒𐏒𐏑\", \"𐏒𐏒𐏒\", \"𐏒𐏒𐏒𐏑\", \"𐏒𐏒𐏒𐏒\", \"𐏒𐏒𐏒𐏒𐏑\", \"𐎢𐎶\", \"\", \"।\", \"॥\"],\n  \"candra\": [\"𐎡\"]\n};\nschemes.phags_pa = {\n  \"vowels\": [\"ꡝ\", \"ꡝꡖ\", \"ꡞ\", \"ꡞꡖ\", \"ꡟ\", \"ꡟꡖ\", \"ꡘꡞ\", \"ꡘꡖꡞ\", \"ꡙꡞ\", \"ꡙꡖꡞ\", \"\", \"ꡠ\", \"ꡠꡖ\", \"\", \"ꡡ\", \"ꡡꡖ\"],\n  \"vowel_marks\": [\"ꡖ\", \"ꡞ\", \"ꡖꡞ\", \"ꡟ\", \"ꡖꡟ\", \"ꡱꡞ\", \"ꡖꡱꡞ\", \"ꡙꡞ\", \"ꡙꡖꡞ\", \"\", \"ꡠ\", \"ꡖꡠ\", \"\", \"ꡡ\", \"ꡖꡡ\"],\n  \"yogavaahas\": [\"ꡳ\", \"ꡜ\", \"ꡳ\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"ꡀ\", \"ꡁ\", \"ꡂ\", \"ꡂꡜ\", \"ꡃ\", \"ꡐ\", \"ꡑ\", \"ꡒ\", \"ꡒꡜ\", \"ꡇ\", \"ꡩ\", \"ꡪ\", \"ꡫ\", \"ꡫꡜ\", \"ꡬ\", \"ꡈ\", \"ꡉ\", \"ꡊ\", \"ꡊꡜ\", \"ꡋ\", \"ꡌ\", \"ꡍ\", \"ꡎ\", \"ꡎꡜ\", \"ꡏ\", \"ꡗ\", \"ꡘ\", \"ꡙ\", \"ꡓ\", \"ꡚ\", \"ꡚ\", \"ꡛ\", \"ꡜ\", \"ꡙ\", \"ꡀꡚ\", \"ꡒꡇ\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"ꡳꡡ\", \"\", \"।\", \"॥\"],\n  \"candra\": [\"ꡠ\"]\n};\nschemes.ranjana = {\n  \"vowels\": [\"अ\", \"आ\", \"इ\", \"ई\", \"उ\", \"ऊ\", \"ऋ\", \"ॠ\", \"ऌ\", \"ॡ\", \"\", \"ए\", \"ऐ\", \"\", \"ओ\", \"औ\"],\n  \"vowel_marks\": [\"ा\", \"ि\", \"ी\", \"ु\", \"ू\", \"ृ\", \"ॄ\", \"ॢ\", \"ॣ\", \"\", \"े\", \"ै\", \"\", \"ो\", \"ौ\"],\n  \"yogavaahas\": [\"ं\", \"ः\", \"ँ\"],\n  \"virama\": [\"्\"],\n  \"consonants\": [\"क\", \"ख\", \"ग\", \"घ\", \"ङ\", \"च\", \"छ\", \"ज\", \"झ\", \"ञ\", \"ट\", \"ठ\", \"ड\", \"ढ\", \"ण\", \"त\", \"थ\", \"द\", \"ध\", \"न\", \"प\", \"फ\", \"ब\", \"भ\", \"म\", \"य\", \"र\", \"ल\", \"व\", \"श\", \"ष\", \"स\", \"ह\", \"ल\", \"क्ष\", \"ज्ञ\"],\n  \"symbols\": [\"०\", \"१\", \"२\", \"३\", \"४\", \"५\", \"६\", \"७\", \"८\", \"९\", \"ॐ\", \"ऽ\", \"।\", \"॥\"],\n  \"candra\": [\"े\"]\n};\nschemes.rejang = {\n  \"vowels\": [\"ꥆ\", \"ꥆ\", \"ꥆꥇ\", \"ꥆꥇ\", \"ꥆꥈ\", \"ꥆꥈ\", \"ꤽꥈ\", \"ꤽꥈ\", \"ꤾꥈ\", \"ꤾꥈ\", \"\", \"ꥆꥉ\", \"ꥆꥊ\", \"\", \"ꥆꥋ\", \"ꥆꥌ\"],\n  \"vowel_marks\": [\"\", \"ꥇ\", \"ꥇ\", \"ꥈ\", \"ꥈ\", \"꥓ꤽꥈ\", \"꥓ꤽꥈ\", \"꥓ꤾꥈ\", \"꥓ꤾꥈ\", \"\", \"ꥉ\", \"ꥊ\", \"\", \"ꥋ\", \"ꥌ\"],\n  \"yogavaahas\": [\"ꥏ\", \"ꥒ\", \"ꥏ\"],\n  \"virama\": [\"꥓\"],\n  \"consonants\": [\"ꤰ\", \"ꤰ\", \"ꤱ\", \"ꤱ\", \"ꤲ\", \"ꤹ\", \"ꤹ\", \"ꤺ\", \"ꤺ\", \"ꤻ\", \"ꤳ\", \"ꤳ\", \"ꤴ\", \"ꤴ\", \"ꤵ\", \"ꤳ\", \"ꤳ\", \"ꤴ\", \"ꤴ\", \"ꤵ\", \"ꤶ\", \"ꤶ\", \"ꤷ\", \"ꤷ\", \"ꤸ\", \"ꤿ\", \"ꤽ\", \"ꤾ\", \"ꥀ\", \"ꤼ\", \"ꤼ\", \"ꤼ\", \"ꥁ\", \"ꤾ\", \"ꤰ꥓ꤼ\", \"ꤺ꥓ꤻ\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"ꥆꥋꥏ\", \"'\", \"।\", \"॥\"],\n  \"candra\": [\"ꥎ\"]\n};\nschemes.rohingya = {\n  \"vowels\": [\"𐴀𐴝\", \"𐴀𐴝𐴤\", \"𐴀𐴞\", \"𐴀𐴞𐴤\", \"𐴀𐴟\", \"𐴀𐴟𐴤\", \"𐴌𐴟\", \"𐴌𐴟𐴤\", \"𐴓𐴟\", \"𐴓𐴟𐴤\", \"\", \"𐴀𐴠𐴤\", \"𐴀𐴝𐴙\", \"\", \"𐴀𐴡𐴤\", \"𐴀𐴝𐴗\"],\n  \"vowel_marks\": [\"𐴀𐴝𐴤\", \"𐴀𐴞\", \"𐴀𐴞𐴤\", \"𐴀𐴟\", \"𐴀𐴟𐴤\", \"𐴌𐴟\", \"𐴌𐴟𐴤\", \"𐴓𐴟\", \"𐴓𐴟𐴤\", \"\", \"𐴀𐴠𐴤\", \"𐴀𐴝𐴙\", \"\", \"𐴀𐴡𐴤\", \"𐴀𐴝𐴗\"],\n  \"yogavaahas\": [\"𐴣\", \"𐴇\", \"𐴣\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"𐴑𐴝\", \"𐴑𐴝\", \"𐴒𐴝\", \"𐴒𐴝\", \"𐴚𐴝\", \"𐴆𐴝\", \"𐴆𐴝\", \"𐴅𐴝\", \"𐴅𐴝\", \"𐴛𐴝\", \"𐴄𐴝\", \"𐴄𐴝\", \"𐴋𐴝\", \"𐴋𐴝\", \"𐴕𐴝\", \"𐴃𐴝\", \"𐴃𐴝\", \"𐴊𐴝\", \"𐴊𐴝\", \"𐴕𐴝\", \"𐴂𐴝\", \"𐴂𐴝\", \"𐴁𐴝\", \"𐴁𐴝\", \"𐴔𐴝\", \"𐴘𐴝\", \"𐴌𐴝\", \"𐴓𐴝\", \"𐴖𐴝\", \"𐴐𐴝\", \"𐴐𐴝\", \"𐴏𐴝\", \"𐴇𐴝\", \"𐴓𐴝\", \"𐴑𐴐𐴝\", \"𐴅𐴛𐴝\"],\n  \"symbols\": [\"𐴰\", \"𐴱\", \"𐴲\", \"𐴳\", \"𐴴\", \"𐴵\", \"𐴶\", \"𐴷\", \"𐴸\", \"𐴹\", \"𐴀𐴀𐴡𐴴𐴔\", \"\", \"।\", \"॥\"],\n  \"candra\": [\"𐴀𐴠\"]\n};\nschemes.shan = {\n  \"vowels\": [\"အ\", \"အႃ\", \"အိ\", \"အီ\", \"အု\", \"အူ\", \"အၖ\", \"အၗ\", \"အၘ\", \"အၙ\", \"အေ\", \"အေ\", \"အႆ\", \"အေႃ\", \"အေႃ\", \"အဝ်\"],\n  \"vowel_marks\": [\"ႃ\", \"ိ\", \"ီ\", \"ု\", \"ူ\", \"ၖ\", \"ၗ\", \"ၘ\", \"ၙ\", \"ေ\", \"ေ\", \"ႆ\", \"ေႃ\", \"ေႃ\", \"ဝ်\"],\n  \"yogavaahas\": [\"ံ\", \"း\", \"ံ\"],\n  \"virama\": [\"်\"],\n  \"consonants\": [\"ၵ\", \"ၶ\", \"ၷ\", \"ꧠ\", \"င\", \"ၸ\", \"ꧡ\", \"ꩡ\", \"ꧢ\", \"ၺ\", \"ꩦ\", \"ꩧ\", \"ꩨ\", \"ꩩ\", \"ꧣ\", \"တ\", \"ထ\", \"ၻ\", \"ꩪ\", \"ၼ\", \"ပ\", \"ၽ\", \"ၿ\", \"ꧤ\", \"မ\", \"ယ\", \"ရ\", \"လ\", \"ဝ\", \"ၐ\", \"ၑ\", \"သ\", \"ႁ\", \"ꩮ\", \"ၵ်ၑ\", \"ꩡ်ၺ\"],\n  \"symbols\": [\"႐\", \"႑\", \"႒\", \"႓\", \"႔\", \"႕\", \"႖\", \"႗\", \"႘\", \"႙\", \"အေႃံ\", \"'\", \"၊\", \"။\"],\n  \"candra\": [\"ႄ\"],\n  \"extra_consonants\": [\"ၵ\", \"ၶ\", \"ၷ\", \"ၹ\", \"ꩨ\", \"ꩩ\", \"ၾ\", \"ယ\", \"ရ\"]\n};\nschemes.sharada = {\n  \"vowels\": [\"𑆃\", \"𑆄\", \"𑆅\", \"𑆆\", \"𑆇\", \"𑆈\", \"𑆉\", \"𑆊\", \"𑆋\", \"𑆌\", \"𑆍𑇌\", \"𑆍\", \"𑆎\", \"𑆏𑇌\", \"𑆏\", \"𑆐\"],\n  \"vowel_marks\": [\"𑆳\", \"𑆴\", \"𑆵\", \"𑆶\", \"𑆷\", \"𑆸\", \"𑆹\", \"𑆺\", \"𑆻\", \"𑆼𑇌\", \"𑆼\", \"𑆽\", \"𑆾𑇌\", \"𑆾\", \"𑆿\"],\n  \"yogavaahas\": [\"𑆁\", \"𑆂\", \"𑆀\"],\n  \"virama\": [\"𑇀\"],\n  \"consonants\": [\"𑆑\", \"𑆒\", \"𑆓\", \"𑆔\", \"𑆕\", \"𑆖\", \"𑆗\", \"𑆘\", \"𑆙\", \"𑆚\", \"𑆛\", \"𑆜\", \"𑆝\", \"𑆞\", \"𑆟\", \"𑆠\", \"𑆡\", \"𑆢\", \"𑆣\", \"𑆤\", \"𑆥\", \"𑆦\", \"𑆧\", \"𑆨\", \"𑆩\", \"𑆪\", \"𑆫\", \"𑆬\", \"𑆮\", \"𑆯\", \"𑆰\", \"𑆱\", \"𑆲\", \"𑆭\", \"𑆑𑇀𑆰\", \"𑆘𑇀𑆚\"],\n  \"symbols\": [\"𑇐\", \"𑇑\", \"𑇒\", \"𑇓\", \"𑇔\", \"𑇕\", \"𑇖\", \"𑇗\", \"𑇘\", \"𑇙\", \"𑆏𑆀\", \"𑇁\", \"𑇅\", \"𑇆\"],\n  \"zwj\": [\"\\u200D\"],\n  \"skip\": [\"\"],\n  \"accents\": [\"॑\", \"॒\"],\n  \"candra\": [\"𑆼\"],\n  \"extra_consonants\": [\"𑆑𑇊\", \"𑆒𑇊\", \"𑆓𑇊\", \"𑆘𑇊\", \"𑆝𑇊\", \"𑆞𑇊\", \"𑆦𑇊\", \"𑆪𑇊\", \"𑆫𑇊\", \"𑆭𑇊\"]\n};\nschemes.siddham = {\n  \"vowels\": [\"𑖀\", \"𑖁\", \"𑖂\", \"𑖃\", \"𑖄\", \"𑖅\", \"𑖆\", \"𑖇\", \"𑖈\", \"𑖉\", \"𑖊\", \"𑖊\", \"𑖋\", \"𑖌\", \"𑖌\", \"𑖍\"],\n  \"vowel_marks\": [\"𑖯\", \"𑖰\", \"𑖱\", \"𑖲\", \"𑖳\", \"𑖴\", \"𑖵\", \"𑖿𑖩𑖰\", \"𑖿𑖩𑖱\", \"𑖸\", \"𑖸\", \"𑖹\", \"𑖺\", \"𑖺\", \"𑖻\"],\n  \"yogavaahas\": [\"𑖽\", \"𑖾\", \"𑖼\"],\n  \"virama\": [\"𑖿\"],\n  \"consonants\": [\"𑖎\", \"𑖏\", \"𑖐\", \"𑖑\", \"𑖒\", \"𑖓\", \"𑖔\", \"𑖕\", \"𑖖\", \"𑖗\", \"𑖘\", \"𑖙\", \"𑖚\", \"𑖛\", \"𑖜\", \"𑖝\", \"𑖞\", \"𑖟\", \"𑖠\", \"𑖡\", \"𑖢\", \"𑖣\", \"𑖤\", \"𑖥\", \"𑖦\", \"𑖧\", \"𑖨\", \"𑖩\", \"𑖪\", \"𑖫\", \"𑖬\", \"𑖭\", \"𑖮\", \"𑖩𑗀\", \"𑖎𑖿𑖬\", \"𑖕𑖿𑖗\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"𑖌𑖼\", \"\", \"𑗂\", \"𑗃\"],\n  \"candra\": [\"𑖸\"],\n  \"extra_consonants\": [\"𑖎𑗀\", \"𑖏𑗀\", \"𑖐𑗀\", \"𑖕𑗀\", \"𑖚𑗀\", \"𑖛𑗀\", \"𑖣𑗀\", \"𑖧𑗀\", \"𑖨𑗀\"]\n};\nschemes.sinhala = {\n  \"vowels\": [\"අ\", \"ආ\", \"ඉ\", \"ඊ\", \"උ\", \"ඌ\", \"ඍ\", \"ඎ\", \"ඏ\", \"ඐ\", \"එ\", \"ඒ\", \"ඓ\", \"ඔ\", \"ඕ\", \"ඖ\"],\n  \"vowel_marks\": [\"ා\", \"ි\", \"ී\", \"ු\", \"ූ\", \"ෘ\", \"ෲ\", \"ෟ\", \"ෳ\", \"ෙ\", \"ේ\", \"ෛ\", \"ො\", \"ෝ\", \"ෞ\"],\n  \"yogavaahas\": [\"ං\", \"ඃ\", \"ං\"],\n  \"virama\": [\"්\"],\n  \"consonants\": [\"ක\", \"ඛ\", \"ග\", \"ඝ\", \"ඞ\", \"ච\", \"ඡ\", \"ජ\", \"ඣ\", \"ඤ\", \"ට\", \"ඨ\", \"ඩ\", \"ඪ\", \"ණ\", \"ත\", \"ථ\", \"ද\", \"ධ\", \"න\", \"ප\", \"ඵ\", \"බ\", \"භ\", \"ම\", \"ය\", \"ර\", \"ල\", \"ව\", \"ශ\", \"ෂ\", \"ස\", \"හ\", \"ළ\", \"ක්‍ෂ\", \"ඥ\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"ඕං\", \"(අ)\", \".\", \"..\"],\n  \"candra\": [\"ැ\"],\n  \"extra_consonants\": [\"ක\", \"ඛ\", \"ග\", \"ජ\", \"ඩ\", \"ඪ\", \"ෆ\", \"ය\", \"ර\", \"ළ\"]\n};\nschemes.sora_sompeng = {\n  \"vowels\": [\"𑃦𑃨\", \"𑃢\", \"𑃤\", \"𑃤\", \"𑃥\", \"𑃥\", \"𑃝𑃤\", \"𑃝𑃤\", \"𑃘𑃤\", \"𑃘𑃤\", \"𑃣\", \"𑃣\", \"𑃧\", \"𑃦\", \"𑃦\", \"𑃦𑃥\"],\n  \"vowel_marks\": [\"𑃢\", \"𑃤\", \"𑃤\", \"𑃥\", \"𑃥\", \"𑃝𑃤\", \"𑃝𑃤\", \"𑃘𑃤\", \"𑃘𑃤\", \"𑃣\", \"𑃣\", \"𑃧\", \"𑃦\", \"𑃦\", \"𑃦𑃥\"],\n  \"yogavaahas\": [\"𑃖\", \"𑃞\", \"𑃖\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"𑃟\", \"𑃟𑃠\", \"𑃕\", \"𑃕𑃠\", \"𑃗\", \"𑃓\", \"𑃓𑃠\", \"𑃠\", \"𑃠𑃠\", \"𑃡\", \"𑃑𑃨\", \"𑃑𑃨𑃠\", \"𑃔\", \"𑃔𑃠\", \"𑃙𑃨\", \"𑃑\", \"𑃑𑃠\", \"𑃔𑃨\", \"𑃔𑃨𑃠\", \"𑃙\", \"𑃛\", \"𑃛𑃠\", \"𑃒\", \"𑃒𑃠\", \"𑃖\", \"𑃜\", \"𑃝\", \"𑃘\", \"𑃚\", \"𑃐𑃠\", \"𑃐𑃨\", \"𑃐\", \"𑃞\", \"𑃘𑃨\", \"𑃟𑃐𑃨\", \"𑃠𑃡\"],\n  \"symbols\": [\"𑃰\", \"𑃱\", \"𑃲\", \"𑃳\", \"𑃴\", \"𑃵\", \"𑃶\", \"𑃷\", \"𑃸\", \"𑃹\", \"𑃦𑃖\", \"'\", \".\", \"..\"],\n  \"candra\": [\"𑃣\"],\n  \"extra_consonants\": [\"𑃟\", \"𑃟𑃠\", \"𑃕\", \"𑃠\", \"𑃝𑃔\", \"𑃝𑃔𑃠\", \"𑃛𑃠\", \"𑃜\", \"𑃘\"]\n};\nschemes.sundanese = {\n  \"vowels\": [\"ᮃ\", \"ᮃ\", \"ᮄ\", \"ᮄ\", \"ᮅ\", \"ᮅ\", \"ᮛᮩ\", \"ᮛᮩ\", \"ᮜᮩ\", \"ᮜᮩ\", \"ᮈ\", \"ᮈ\", \"ᮃᮄ\", \"ᮇ\", \"ᮇ\", \"ᮃᮅ\"],\n  \"vowel_marks\": [\"\", \"ᮤ\", \"ᮤ\", \"ᮥ\", \"ᮥ\", \"ᮢᮩ\", \"ᮢᮩ\", \"ᮣᮩ\", \"ᮣᮩ\", \"ᮨ\", \"ᮨ\", \"ᮄ\", \"ᮧ\", \"ᮧ\", \"ᮅ\"],\n  \"yogavaahas\": [\"ᮀ\", \"ᮂ\", \"ᮀ\"],\n  \"virama\": [\"᮪\"],\n  \"consonants\": [\"ᮊ\", \"ᮊ\", \"ᮌ\", \"ᮌ\", \"ᮍ\", \"ᮎ\", \"ᮎ\", \"ᮏ\", \"ᮏ\", \"ᮑ\", \"ᮒ\", \"ᮒ\", \"ᮓ\", \"ᮓ\", \"ᮔ\", \"ᮒ\", \"ᮒ\", \"ᮓ\", \"ᮓ\", \"ᮔ\", \"ᮕ\", \"ᮕ\", \"ᮘ\", \"ᮘ\", \"ᮙ\", \"ᮚ\", \"ᮛ\", \"ᮜ\", \"ᮝ\", \"ᮯ\", \"ᮯ\", \"ᮞ\", \"ᮠ\", \"ᮜ\", \"ᮊ᮪ᮯ\", \"ᮏ᮪ᮑ\"],\n  \"symbols\": [\"᮰\", \"᮱\", \"᮲\", \"᮳\", \"᮴\", \"᮵\", \"᮶\", \"᮷\", \"᮸\", \"᮹\", \"ᮇᮀ\", \"ᮺ\", \".\", \"..\"],\n  \"candra\": [\"ᮦ\"],\n  \"extra_consonants\": [\"ᮋ\", \"ᮮ\", \"ᮌ\", \"ᮐ\", \"ᮓ\", \"ᮓ\", \"ᮖ\", \"ᮚ\", \"ᮛ\"]\n};\nschemes.syloti_nagari = {\n  \"vowels\": [\"ꠅ\", \"ꠀ\", \"ꠁ\", \"ꠁ\", \"ꠃ\", \"ꠃ\", \"ꠞꠤ\", \"ꠞꠤ\", \"ꠟꠤ\", \"ꠟꠤ\", \"ꠄ\", \"ꠄ\", \"ꠅꠂ\", \"ꠅ\", \"ꠅ\", \"ꠅꠃ\"],\n  \"vowel_marks\": [\"ꠣ\", \"ꠤ\", \"ꠤ\", \"ꠥ\", \"ꠥ\", \"꠆ꠞꠤ\", \"꠆ꠞꠤ\", \"꠆ꠟꠤ\", \"꠆ꠟꠤ\", \"ꠦ\", \"ꠦ\", \"ꠂ\", \"ꠧ\", \"ꠧ\", \"ꠃ\"],\n  \"yogavaahas\": [\"ꠋ\", \"ꠢ꠆\", \"ꠋ\"],\n  \"virama\": [\"꠆\"],\n  \"consonants\": [\"ꠇ\", \"ꠈ\", \"ꠉ\", \"ꠊ\", \"ꠘ\", \"ꠌ\", \"ꠍ\", \"ꠎ\", \"ꠏ\", \"ꠘ\", \"ꠐ\", \"ꠑ\", \"ꠒ\", \"ꠓ\", \"ꠘ\", \"ꠔ\", \"ꠕ\", \"ꠖ\", \"ꠗ\", \"ꠘ\", \"ꠙ\", \"ꠚ\", \"ꠛ\", \"ꠜ\", \"ꠝ\", \"ꠎ\", \"ꠞ\", \"ꠟ\", \"ꠛ\", \"ꠡ\", \"ꠡ\", \"ꠡ\", \"ꠢ\", \"ꠟ\", \"ꠇ꠆ꠡ\", \"ꠎ꠆ꠘ\"],\n  \"symbols\": [\"০\", \"১\", \"২\", \"৩\", \"৪\", \"৫\", \"৬\", \"৭\", \"৮\", \"৯\", \"ꠅꠋ\", \"ঽ\", \"।\", \"॥\"],\n  \"candra\": [\"ꠦ\"],\n  \"extra_consonants\": [\"ꠇ\", \"ꠈ\", \"ꠉ\", \"ꠎ\", \"ꠠ\", \"ꠓ\", \"ꠚ\", \"ꠎ\", \"ꠞ\"]\n};\nschemes.tagalog = {\n  \"vowels\": [\"ᜀ\", \"ᜀ\", \"ᜁ\", \"ᜁ\", \"ᜂ\", \"ᜂ\", \"ᜎᜓ\", \"ᜎᜓ\", \"ᜎᜓ\", \"ᜎᜓ\", \"ᜁ\", \"ᜁ\", \"ᜀᜁ\", \"ᜂ\", \"ᜂ\", \"ᜀᜂ\"],\n  \"vowel_marks\": [\"\", \"ᜒ\", \"ᜒ\", \"ᜓ\", \"ᜓ\", \"᜔ᜎᜓ\", \"᜔ᜎᜓ\", \"᜔ᜎᜓ\", \"᜔ᜎᜓ\", \"ᜒ\", \"ᜒ\", \"ᜁ\", \"ᜓ\", \"ᜓ\", \"ᜂ\"],\n  \"yogavaahas\": [\"ᜋ᜔\", \"ᜑ᜔\", \"ᜋ᜔\"],\n  \"virama\": [\"᜔\"],\n  \"consonants\": [\"ᜃ\", \"ᜃ\", \"ᜄ\", \"ᜄ\", \"ᜅ\", \"ᜐ\", \"ᜐ\", \"ᜇ\", \"ᜇ\", \"ᜈ\", \"ᜆ\", \"ᜆ\", \"ᜇ\", \"ᜇ\", \"ᜈ\", \"ᜆ\", \"ᜆ\", \"ᜇ\", \"ᜇ\", \"ᜈ\", \"ᜉ\", \"ᜉ\", \"ᜊ\", \"ᜊ\", \"ᜋ\", \"ᜌ\", \"ᜎ\", \"ᜎ\", \"ᜏ\", \"ᜐ\", \"ᜐ\", \"ᜐ\", \"ᜑ\", \"ᜎ\", \"ᜃ᜔ᜐ\", \"ᜇ᜔ᜈ\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"ᜂᜋ᜔\", \"\", \"᜵\", \"᜶\"],\n  \"candra\": [\"ᜒ\"],\n  \"extra_consonants\": [\"ᜃ\", \"ᜃ\", \"ᜄ\", \"ᜇ\", \"ᜇ\", \"ᜇ\", \"ᜉ\", \"ᜌ\", \"ᜎ\"]\n};\nschemes.tagbanwa = {\n  \"vowels\": [\"ᝠ\", \"ᝠ\", \"ᝡ\", \"ᝡ\", \"ᝢ\", \"ᝢ\", \"ᝮᝳ\", \"ᝮᝳ\", \"ᝮᝳ\", \"ᝮᝳ\", \"ᝡ\", \"ᝡ\", \"ᝠᝡ\", \"ᝢ\", \"ᝢ\", \"ᝠᝢ\"],\n  \"vowel_marks\": [\"\", \"ᝲ\", \"ᝲ\", \"ᝳ\", \"ᝳ\", \"ᝮᝳ\", \"ᝮᝳ\", \"ᝮᝳ\", \"ᝮᝳ\", \"ᝲ\", \"ᝲ\", \"ᝡ\", \"ᝳ\", \"ᝳ\", \"ᝢ\"],\n  \"yogavaahas\": [\"ᝫ\", \"ᝣ\", \"ᝫ\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"ᝣ\", \"ᝣ\", \"ᝤ\", \"ᝤ\", \"ᝥ\", \"ᝰ\", \"ᝰ\", \"ᝧ\", \"ᝧ\", \"ᝨ\", \"ᝦ\", \"ᝦ\", \"ᝧ\", \"ᝧ\", \"ᝨ\", \"ᝦ\", \"ᝦ\", \"ᝧ\", \"ᝧ\", \"ᝨ\", \"ᝩ\", \"ᝩ\", \"ᝪ\", \"ᝪ\", \"ᝫ\", \"ᝬ\", \"ᝮ\", \"ᝮ\", \"ᝯ\", \"ᝰ\", \"ᝰ\", \"ᝰ\", \"ᝣ\", \"ᝮ\", \"ᝣᝰ\", \"ᝧᝨ\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"ᝢᝫ\", \"\", \"᜵\", \"᜶\"],\n  \"candra\": [\"ᝲ\"],\n  \"extra_consonants\": [\"ᝣ\", \"ᝣ\", \"ᝤ\", \"ᝧ\", \"ᝧ\", \"ᝧ\", \"ᝩ\", \"ᝬ\", \"ᝮ\"]\n};\nschemes.tai_laing = {\n  \"vowels\": [\"အ\", \"အႃ\", \"အိ\", \"အီ\", \"အု\", \"အူ\", \"ꩺိ\", \"ꩺီ\", \"လိ\", \"လီ\", \"အေ\", \"အေ\", \"အႆ\", \"အေႃ\", \"အေႃ\", \"အဝ်\"],\n  \"vowel_marks\": [\"ႃ\", \"ိ\", \"ီ\", \"ု\", \"ူ\", \"ြိ\", \"ြီ\", \"်လိ\", \"်လီ\", \"ေ\", \"ေ\", \"ႆ\", \"ေႃ\", \"ေႃ\", \"ဝ်\"],\n  \"yogavaahas\": [\"ံ\", \"း\", \"ံ\"],\n  \"virama\": [\"်\"],\n  \"consonants\": [\"က\", \"ၵ\", \"ꧩ\", \"ꧪ\", \"င\", \"ၸ\", \"ꩬ\", \"ꧫ\", \"ꧬ\", \"ꧧ\", \"ꩦ\", \"ꩧ\", \"ꧭ\", \"ꧮ\", \"ꧯ\", \"တ\", \"ထ\", \"ꧻ\", \"ꧼ\", \"ꩫ\", \"ပ\", \"ꧤ\", \"ꧽ\", \"ꧾ\", \"မ\", \"ယ\", \"ꩺ\", \"လ\", \"ဝ\", \"ꧬ\", \"ꧬ\", \"ꧬ\", \"ၯ\", \"ꧺ\", \"က်ꧬ\", \"ꧫ်ꧧ\"],\n  \"symbols\": [\"꧰\", \"꧱\", \"꧲\", \"꧳\", \"꧴\", \"꧵\", \"꧶\", \"꧷\", \"꧸\", \"꧹\", \"အေႃံ\", \"'\", \"၊\", \"။\"],\n  \"candra\": [\"ႄ\"],\n  \"extra_consonants\": [\"က\", \"ၵ\", \"ꧩ\", \"ꧫ\", \"ꧭ\", \"ꧮ\", \"ꧨ\", \"ယ\", \"ꩺ\"]\n};\nschemes.takri = {\n  \"vowels\": [\"𑚀\", \"𑚁\", \"𑚂\", \"𑚃\", \"𑚄\", \"𑚅\", \"𑚤𑚮\", \"𑚤𑚯\", \"𑚥𑚮\", \"𑚥𑚯\", \"𑚆\", \"𑚆\", \"𑚇\", \"𑚈\", \"𑚈\", \"𑚉\"],\n  \"vowel_marks\": [\"𑚭\", \"𑚮\", \"𑚯\", \"𑚰\", \"𑚱\", \"𑚶𑚤𑚮\", \"𑚶𑚤𑚯\", \"𑚶𑚥𑚮\", \"𑚶𑚥𑚯\", \"𑚳\", \"𑚲\", \"𑚳\", \"𑚴\", \"𑚴\", \"𑚵\"],\n  \"yogavaahas\": [\"𑚫\", \"𑚬\", \"𑚫\"],\n  \"virama\": [\"𑚶\"],\n  \"consonants\": [\"𑚊\", \"𑚋\", \"𑚌\", \"𑚍\", \"𑚎\", \"𑚏\", \"𑚐\", \"𑚑\", \"𑚒\", \"𑚓\", \"𑚔\", \"𑚕\", \"𑚖\", \"𑚗\", \"𑚘\", \"𑚙\", \"𑚚\", \"𑚛\", \"𑚜\", \"𑚝\", \"𑚞\", \"𑚟\", \"𑚠\", \"𑚡\", \"𑚢\", \"𑚣\", \"𑚤\", \"𑚥\", \"𑚦\", \"𑚧\", \"𑚋\", \"𑚨\", \"𑚩\", \"𑚥𑚷\", \"𑚊𑚶𑚋\", \"𑚑𑚶𑚓\"],\n  \"symbols\": [\"𑛀\", \"𑛁\", \"𑛂\", \"𑛃\", \"𑛄\", \"𑛅\", \"𑛆\", \"𑛇\", \"𑛈\", \"𑛉\", \"𑚈𑚫\", \"ऽ\", \"।\", \"॥\"],\n  \"candra\": [\"𑚳\"],\n  \"extra_consonants\": [\"𑚊𑚷\", \"𑚋𑚷\", \"𑚌𑚷\", \"𑚑𑚷\", \"𑚪\", \"𑚗𑚷\", \"𑚟𑚷\", \"𑚣𑚷\", \"𑚤𑚷\"]\n};\nschemes.tamil = {\n  \"vowels\": [\"அ\", \"ஆ\", \"இ\", \"ஈ\", \"உ\", \"ஊ\", \"\", \"\", \"\", \"\", \"எ\", \"ஏ\", \"ஐ\", \"ஒ\", \"ஓ\", \"ஔ\"],\n  \"vowel_marks\": [\"ா\", \"ி\", \"ீ\", \"ு\", \"ூ\", \"\", \"\", \"\", \"\", \"ெ\", \"ே\", \"ை\", \"ொ\", \"ோ\", \"ௌ\"],\n  \"yogavaahas\": [\"ஂ\", \"ஃ\", \"\"],\n  \"virama\": [\"்\"],\n  \"consonants\": [\"க\", \"க\", \"க\", \"க\", \"ங\", \"ச\", \"ச\", \"ஜ\", \"ச\", \"ஞ\", \"ட\", \"ட\", \"ட\", \"ட\", \"ண\", \"த\", \"த\", \"த\", \"த\", \"ந\", \"ப\", \"ப\", \"ப\", \"ப\", \"ம\", \"ய\", \"ர\", \"ல\", \"வ\", \"ஶ\", \"ஷ\", \"ஸ\", \"ஹ\", \"ள\", \"க்ஷ\", \"ஜ்ஞ\"],\n  \"symbols\": [\"௦\", \"௧\", \"௨\", \"௩\", \"௪\", \"௫\", \"௬\", \"௭\", \"௮\", \"௯\", \"ௐ\", \"ऽ\", \"।\", \"॥\"],\n  \"extra_consonants\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"ற\"]\n};\nschemes.tamil_extended = {\n  \"vowels\": [\"அ\", \"ஆ\", \"இ\", \"ஈ\", \"உ\", \"ஊ\", \"𑌋\", \"𑍠\", \"𑌌\", \"𑍡\", \"எ\", \"ஏ\", \"ஐ\", \"ஒ\", \"ஓ\", \"ஔ\"],\n  \"vowel_marks\": [\"ா\", \"ி\", \"ீ\", \"ு\", \"ூ\", \"𑍃\", \"𑍄\", \"𑍢\", \"𑍣\", \"ெ\", \"ே\", \"ை\", \"ொ\", \"ோ\", \"ௌ\"],\n  \"yogavaahas\": [\"𑌂\", \"𑌃\", \"𑌁\"],\n  \"virama\": [\"்\"],\n  \"consonants\": [\"க\", \"𑌖\", \"𑌗\", \"𑌘\", \"ங\", \"ச\", \"𑌛\", \"ஜ\", \"𑌝\", \"ஞ\", \"ட\", \"𑌠\", \"𑌡\", \"𑌢\", \"ண\", \"த\", \"𑌥\", \"𑌦\", \"𑌧\", \"ந\", \"ப\", \"𑌫\", \"𑌬\", \"𑌭\", \"ம\", \"ய\", \"ர\", \"ல\", \"வ\", \"ஶ\", \"ஷ\", \"ஸ\", \"ஹ\", \"ள\", \"க்ஷ\", \"ஜ்ஞ\"],\n  \"symbols\": [\"௦\", \"௧\", \"௨\", \"௩\", \"௪\", \"௫\", \"௬\", \"௭\", \"௮\", \"௯\", \"ௐ\", \"𑌽\", \"।\", \"॥\"],\n  \"candra\": [\"ெ\"],\n  \"extra_consonants\": [\"க𑌼\", \"𑌖𑌼\", \"𑌗𑌼\", \"ஜ𑌼\", \"𑌡𑌼\", \"𑌢𑌼\", \"𑌫𑌼\", \"ய𑌼\", \"ற\"]\n};\nschemes.tamil_superscripted = {\n  \"vowels\": [\"அ\", \"ஆ\", \"இ\", \"ஈ\", \"உ\", \"ஊ\", \"ருʼ\", \"ரூʼ\", \"லுʼ\", \"லூʼ\", \"எ\", \"ஏ\", \"ஐ\", \"ஒ\", \"ஓ\", \"ஔ\"],\n  \"vowel_marks\": [\"ா\", \"ி\", \"ீ\", \"ு\", \"ூ\", \"்ருʼ\", \"்ரூʼ\", \"்லுʼ\", \"்லூʼ\", \"ெ\", \"ே\", \"ை\", \"ொ\", \"ோ\", \"ௌ\"],\n  \"yogavaahas\": [\"ம்ʼ\", \"꞉\", \"ம்ˮ\"],\n  \"virama\": [\"்\"],\n  \"consonants\": [\"க\", \"க²\", \"க³\", \"க⁴\", \"ங\", \"ச\", \"ச²\", \"ஜ\", \"ஜ²\", \"ஞ\", \"ட\", \"ட²\", \"ட³\", \"ட⁴\", \"ண\", \"த\", \"த²\", \"த³\", \"த⁴\", \"ந\", \"ப\", \"ப²\", \"ப³\", \"ப⁴\", \"ம\", \"ய\", \"ர\", \"ல\", \"வ\", \"ஶ\", \"ஷ\", \"ஸ\", \"ஹ\", \"ள\", \"க்ஷ\", \"ஜ்ஞ\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"ௐ\", \"(அ)\", \".\", \"..\"],\n  \"candra\": [\"ே\"],\n  \"extra_consonants\": [\"ஃʼக\", \"ஃக²\", \"ஃக³\", \"ஃஜ\", \"ஃட²\", \"ஃட³\", \"ஃப\", \"ஃய\", \"ற\"]\n};\nschemes.telugu = {\n  \"vowels\": [\"అ\", \"ఆ\", \"ఇ\", \"ఈ\", \"ఉ\", \"ఊ\", \"ఋ\", \"ౠ\", \"ఌ\", \"ౡ\", \"ఎ\", \"ఏ\", \"ఐ\", \"ఒ\", \"ఓ\", \"ఔ\"],\n  \"vowel_marks\": [\"ా\", \"ి\", \"ీ\", \"ు\", \"ూ\", \"ృ\", \"ౄ\", \"ౢ\", \"ౣ\", \"ె\", \"ే\", \"ై\", \"ొ\", \"ో\", \"ౌ\"],\n  \"yogavaahas\": [\"ం\", \"ః\", \"ఁ\"],\n  \"virama\": [\"్\"],\n  \"consonants\": [\"క\", \"ఖ\", \"గ\", \"ఘ\", \"ఙ\", \"చ\", \"ఛ\", \"జ\", \"ఝ\", \"ఞ\", \"ట\", \"ఠ\", \"డ\", \"ఢ\", \"ణ\", \"త\", \"థ\", \"ద\", \"ధ\", \"న\", \"ప\", \"ఫ\", \"బ\", \"భ\", \"మ\", \"య\", \"ర\", \"ల\", \"వ\", \"శ\", \"ష\", \"స\", \"హ\", \"ళ\", \"క్ష\", \"జ్ఞ\"],\n  \"symbols\": [\"౦\", \"౧\", \"౨\", \"౩\", \"౪\", \"౫\", \"౬\", \"౭\", \"౮\", \"౯\", \"ఓం\", \"ఽ\", \"।\", \"॥\"],\n  \"extra_consonants\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"ఱ\", \"ఴ\"]\n};\nschemes.thai = {\n  \"vowels\": [\"อ\", \"อา\", \"อิ\", \"อี\", \"อุ\", \"อู\", \"ฤ\", \"ฤๅ\", \"ฦ\", \"ฦๅ\", \"เอะ\", \"เอ\", \"ไอ\", \"โอะ\", \"โอ\", \"เอา\"],\n  \"vowel_marks\": [\"า\", \"ิ\", \"ี\", \"ุ\", \"ู\", \"ฺฤ\", \"ฺฤๅ\", \"ฺฦ\", \"ฺฦๅ\", \"เะ\", \"เ\", \"ไ\", \"โะ\", \"โ\", \"เา\"],\n  \"yogavaahas\": [\"ํ\", \"ห์\", \"ํ\"],\n  \"virama\": [\"ฺ\"],\n  \"consonants\": [\"ก\", \"ข\", \"ค\", \"ฆ\", \"ง\", \"จ\", \"ฉ\", \"ช\", \"ฌ\", \"ญ\", \"ฏ\", \"ฐ\", \"ฑ\", \"ฒ\", \"ณ\", \"ต\", \"ถ\", \"ท\", \"ธ\", \"น\", \"ป\", \"ผ\", \"พ\", \"ภ\", \"ม\", \"ย\", \"ร\", \"ล\", \"ว\", \"ศ\", \"ษ\", \"ส\", \"ห\", \"ฬ\", \"กฺษ\", \"ชฺญ\"],\n  \"symbols\": [\"๐\", \"๑\", \"๒\", \"๓\", \"๔\", \"๕\", \"๖\", \"๗\", \"๘\", \"๙\", \"โอํ\", \"'\", \"ฯ\", \"๚\"],\n  \"candra\": [\"แะ\"],\n  \"extra_consonants\": [\"ก\", \"ข\", \"ค\", \"ซ\", \"ร\", \"รฺห\", \"ฟ\", \"ย\", \"ร\"]\n};\nschemes.tibetan = {\n  \"vowels\": [\"ཨ\", \"ཨཱ\", \"ཨི\", \"ཨཱི\", \"ཨུ\", \"ཨཱུ\", \"རྀ\", \"རཱྀ\", \"ལྀ\", \"ལཱྀ\", \"ཨེ\", \"ཨེ\", \"ཨཻ\", \"ཨོ\", \"ཨོ\", \"ཨཽ\"],\n  \"vowel_marks\": [\"ཱ\", \"ི\", \"ཱི\", \"ུ\", \"ཱུ\", \"ྲྀ\", \"ྲཱྀ\", \"ླྀ\", \"ླཱྀ\", \"ེ\", \"ེ\", \"ཻ\", \"ོ\", \"ོ\", \"ཽ\"],\n  \"yogavaahas\": [\"ཾ\", \"ཿ\", \"ྃ\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"ཀ\", \"ཁ\", \"ག\", \"གྷ\", \"ང\", \"ཙ\", \"ཚ\", \"ཛ\", \"ཛྷ\", \"ཉ\", \"ཊ\", \"ཋ\", \"ཌ\", \"ཌྷ\", \"ཎ\", \"ཏ\", \"ཐ\", \"ད\", \"དྷ\", \"ན\", \"པ\", \"ཕ\", \"བ\", \"བྷ\", \"མ\", \"ཡ\", \"ར\", \"ལ\", \"བ\", \"ཤ\", \"ཥ\", \"ས\", \"ཧ\", \"ལ༹\", \"ཀྵ\", \"ཛྙ\"],\n  \"symbols\": [\"༠\", \"༡\", \"༢\", \"༣\", \"༤\", \"༥\", \"༦\", \"༧\", \"༨\", \"༩\", \"ༀ\", \"྅\", \"།\", \"༎\"],\n  \"candra\": [\"ེ\"],\n  \"extra_consonants\": [\"ཀ༹\", \"ཁ༹\", \"ག༹\", \"ཟ\", \"ཌ༹\", \"ཌྷ༹\", \"ཕ༹\", \"ཡ༹\", \"ར༹\"]\n};\nschemes.tirhuta_maithili = {\n  \"vowels\": [\"𑒁\", \"𑒂\", \"𑒃\", \"𑒄\", \"𑒅\", \"𑒆\", \"𑒇\", \"𑒈\", \"𑒉\", \"𑒊\", \"𑒁𑒺\", \"𑒋\", \"𑒌\", \"𑒁𑒽\", \"𑒍\", \"𑒎\"],\n  \"vowel_marks\": [\"𑒰\", \"𑒱\", \"𑒲\", \"𑒳\", \"𑒴\", \"𑒵\", \"𑒶\", \"𑒷\", \"𑒸\", \"𑒺\", \"𑒹\", \"𑒻\", \"𑒽\", \"𑒼\", \"𑒾\"],\n  \"yogavaahas\": [\"𑓀\", \"𑓁\", \"𑒿\"],\n  \"virama\": [\"𑓂\"],\n  \"consonants\": [\"𑒏\", \"𑒐\", \"𑒑\", \"𑒒\", \"𑒓\", \"𑒔\", \"𑒕\", \"𑒖\", \"𑒗\", \"𑒘\", \"𑒙\", \"𑒚\", \"𑒛\", \"𑒜\", \"𑒝\", \"𑒞\", \"𑒟\", \"𑒠\", \"𑒡\", \"𑒢\", \"𑒣\", \"𑒤\", \"𑒥\", \"𑒦\", \"𑒧\", \"𑒨\", \"𑒩\", \"𑒪\", \"𑒫\", \"𑒬\", \"𑒭\", \"𑒮\", \"𑒯\", \"𑒝𑓃\", \"𑒏𑓂𑒭\", \"𑒖𑓂𑒘\"],\n  \"symbols\": [\"𑓐\", \"𑓑\", \"𑓒\", \"𑓓\", \"𑓔\", \"𑓕\", \"𑓖\", \"𑓗\", \"𑓘\", \"𑓙\", \"𑓇\", \"𑓄\", \"।\", \"॥\"],\n  \"candra\": [\"𑒹\"],\n  \"extra_consonants\": [\"𑒏𑓃\", \"𑒐𑓃\", \"𑒑𑓃\", \"𑒖𑓃\", \"𑒛𑓃\", \"𑒜𑓃\", \"𑒤𑓃\", \"𑒨𑓃\", \"𑒩\"]\n};\nschemes.urdu = {\n  \"vowels\": [\"اَ\", \"آ\", \"اِ\", \"اِی\", \"اُ\", \"اُو\", \"رِ\", \"رِی\", \"لِ\", \"لِی\", \"اے\", \"اے\", \"اَے\", \"او\", \"او\", \"اَو\"],\n  \"vowel_marks\": [\"ا\", \"ِ\", \"ِی\", \"ُ\", \"ُو\", \"ْرِ\", \"ْرِی\", \"ْلِ\", \"ْلِی\", \"ے\", \"ے\", \"ے\", \"و\", \"و\", \"و\"],\n  \"yogavaahas\": [\"ں\", \"ہ\", \"ں\"],\n  \"virama\": [\"ْ\"],\n  \"consonants\": [\"کَ\", \"کھَ\", \"گَ\", \"گھَ\", \"نَ\", \"چَ\", \"چھَ\", \"جَ\", \"جھَ\", \"نَ\", \"ٹَ\", \"ٹھَ\", \"ڈَ\", \"ڈھَ\", \"نَ\", \"تَ\", \"تھَ\", \"دَ\", \"دھَ\", \"نَ\", \"پَ\", \"پھَ\", \"بَ\", \"بھَ\", \"مَ\", \"یَ\", \"رَ\", \"لَ\", \"وَ\", \"شَ\", \"شَ\", \"سَ\", \"ہَ\", \"لَ\", \"کْشَ\", \"جْنَ\"],\n  \"symbols\": [\"۰\", \"۱\", \"۲\", \"۳\", \"۴\", \"۵\", \"۶\", \"۷\", \"۸\", \"۹\", \"اومْ\", \"\", \"۔\", \"۔۔\"],\n  \"candra\": [\"ے\"],\n  \"extra_consonants\": [\"قَ\", \"خَ\", \"غَ\", \"زَ\", \"ڑَ\", \"ڑھَ\", \"فَ\", \"یَ\", \"رَ\"]\n};\nschemes.vattelutu = {\n  \"vowels\": [\"அ\", \"ஆ\", \"இ\", \"ஈ\", \"உ\", \"ஊ\", \"ரு\", \"ரூ\", \"லு\", \"லூ\", \"எ\", \"ஏ\", \"ஐ\", \"ஒ\", \"ஓ\", \"ஔ\"],\n  \"vowel_marks\": [\"ா\", \"ி\", \"ீ\", \"ு\", \"ூ\", \"்ரு\", \"்ரூ\", \"்லு\", \"்லூ\", \"ெ\", \"ே\", \"ை\", \"ொ\", \"ோ\", \"ௌ\"],\n  \"yogavaahas\": [\"ம்\", \"꞉\", \"ம்\"],\n  \"virama\": [\"்\"],\n  \"consonants\": [\"க\", \"க\", \"க\", \"க\", \"ங\", \"ச\", \"ச\", \"ச\", \"ச\", \"ஞ\", \"ட\", \"ட\", \"ட\", \"ட\", \"ண\", \"த\", \"த\", \"த\", \"த\", \"ந\", \"ப\", \"ப\", \"ப\", \"ப\", \"ம\", \"ய\", \"ர\", \"ல\", \"வ\", \"ச\", \"ச\", \"ச\", \"க\", \"ள\", \"க்ச\", \"ச்ஞ\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"ஓம்\", \"\", \".\", \"..\"],\n  \"candra\": [\"ெ\"],\n  \"extra_consonants\": [\"க\", \"க\", \"க\", \"ச\", \"ட\", \"ட\", \"ப\", \"ய\", \"ற\"]\n};\nschemes.wancho = {\n  \"vowels\": [\"𞋁\", \"𞋀\", \"𞋜\", \"𞋜\", \"𞋞\", \"𞋞\", \"𞋗𞋞\", \"𞋗𞋞\", \"𞋈𞋞\", \"𞋈𞋞\", \"𞋛\", \"𞋛\", \"𞋀𞋜\", \"𞋕\", \"𞋕\", \"𞋖\"],\n  \"vowel_marks\": [\"𞋀\", \"𞋜\", \"𞋜\", \"𞋞\", \"𞋞\", \"𞋗𞋞\", \"𞋗𞋞\", \"𞋈𞋞\", \"𞋈𞋞\", \"𞋛\", \"𞋛\", \"𞋀𞋜\", \"𞋕\", \"𞋕\", \"𞋖\"],\n  \"yogavaahas\": [\"𞋝\", \"𞋫\", \"𞋉\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"𞋔𞋁\", \"𞋙𞋁\", \"𞋅𞋁\", \"𞋅𞋁\", \"𞋝𞋁\", \"𞋃𞋁\", \"𞋃𞋁\", \"𞋐𞋁\", \"𞋐𞋁\", \"𞋩𞋁\", \"𞋋𞋁\", \"𞋌𞋁\", \"𞋄𞋁\", \"𞋄𞋁\", \"𞋉𞋁\", \"𞋋𞋁\", \"𞋌𞋁\", \"𞋄𞋁\", \"𞋄𞋁\", \"𞋉𞋁\", \"𞋊𞋁\", \"𞋇𞋁\", \"𞋂𞋁\", \"𞋂𞋁\", \"𞋘𞋁\", \"𞋆𞋁\", \"𞋗𞋁\", \"𞋈𞋁\", \"𞋓𞋁\", \"𞋏𞋁\", \"𞋏𞋁\", \"𞋎𞋁\", \"𞋚𞋁\", \"𞋟𞋁\", \"𞋔𞋏𞋁\", \"𞋐𞋩𞋁\"],\n  \"symbols\": [\"𞋰\", \"𞋱\", \"𞋲\", \"𞋳\", \"𞋴\", \"𞋵\", \"𞋶\", \"𞋷\", \"𞋸\", \"𞋹\", \"𞋦\", \"\", \".\", \"..\"],\n  \"candra\": [\"𞋛\"],\n  \"extra_consonants\": [\"𞋔𞋁\", \"𞋙𞋁\", \"𞋅𞋁\", \"𞋑𞋁\", \"𞋄𞋁\", \"𞋄𞋁\", \"𞋍𞋁\", \"𞋆𞋁\", \"𞋗𞋁\"]\n};\nschemes.warang_citi = {\n  \"vowels\": [\"𑣁\", \"𑣁𑣙\", \"𑣂\", \"𑣆\", \"𑣃\", \"𑣇\", \"𑣜𑣃\", \"𑣜𑣇\", \"𑣚𑣃\", \"𑣚𑣇\", \"𑣈\", \"𑣈\", \"𑣆\", \"𑣉\", \"𑣉\", \"𑣇\"],\n  \"vowel_marks\": [\"𑣁𑣙\", \"𑣂\", \"𑣆\", \"𑣃\", \"𑣇\", \"𑣜𑣃\", \"𑣜𑣇\", \"𑣚𑣃\", \"𑣚𑣇\", \"𑣈\", \"𑣈\", \"𑣆\", \"𑣉\", \"𑣉\", \"𑣇\"],\n  \"yogavaahas\": [\"𑣀\", \"𑣄\", \"𑣀\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"𑣌\", \"𑣌\", \"𑣋\", \"𑣋\", \"𑣊\", \"𑣏\", \"𑣏\", \"𑣎\", \"𑣎\", \"𑣍\", \"𑣒\", \"𑣒\", \"𑣑\", \"𑣑\", \"𑣐\", \"𑣕\", \"𑣕\", \"𑣔\", \"𑣔\", \"𑣓\", \"𑣘\", \"𑣘\", \"𑣗\", \"𑣗\", \"𑣖\", \"𑣅\", \"𑣜\", \"𑣚\", \"𑣟\", \"𑣞\", \"𑣞\", \"𑣞\", \"𑣙\", \"𑣚\", \"𑣌𑣞\", \"𑣎𑣍\"],\n  \"symbols\": [\"𑣠\", \"𑣡\", \"𑣢\", \"𑣣\", \"𑣤\", \"𑣥\", \"𑣦\", \"𑣧\", \"𑣨\", \"𑣩\", \"𑣿\", \"'\", \".\", \"..\"],\n  \"candra\": [\"𑣈\"],\n  \"extra_consonants\": [\"𑣌\", \"𑣌\", \"𑣋\", \"𑣎\", \"𑣛\", \"𑣛\", \"𑣘\", \"𑣅\", \"𑣜\"]\n};\nschemes.zanbazar_square = {\n  \"vowels\": [\"𑨀\", \"𑨀𑨊\", \"𑨀𑨁\", \"𑨀𑨁𑨊\", \"𑨀𑨂\", \"𑨀𑨂𑨊\", \"𑨫𑨉\", \"𑨫𑨉𑨊\", \"𑨬𑨉\", \"𑨬𑨉𑨊\", \"𑨀𑨄\", \"𑨀𑨄\", \"𑨀𑨄𑨊\", \"𑨀𑨆\", \"𑨀𑨆\", \"𑨀𑨆𑨊\"],\n  \"vowel_marks\": [\"𑨊\", \"𑨁\", \"𑨁𑨊\", \"𑨂\", \"𑨂𑨊\", \"𑩇𑨫𑨉\", \"𑩇𑨫𑨉𑨊\", \"𑩇𑨬𑨉\", \"𑩇𑨬𑨉𑨊\", \"𑨄\", \"𑨄\", \"𑨄𑨊\", \"𑨆\", \"𑨆\", \"𑨆𑨊\"],\n  \"yogavaahas\": [\"𑨸\", \"𑨹\", \"𑨵\"],\n  \"virama\": [\"𑨴\"],\n  \"consonants\": [\"𑨋\", \"𑨌\", \"𑨍\", \"𑨎\", \"𑨏\", \"𑨣\", \"𑨤\", \"𑨥\", \"𑨦\", \"𑨓\", \"𑨔\", \"𑨕\", \"𑨖\", \"𑨗\", \"𑨘\", \"𑨙\", \"𑨚\", \"𑨛\", \"𑨜\", \"𑨝\", \"𑨞\", \"𑨟\", \"𑨠\", \"𑨡\", \"𑨢\", \"𑨪\", \"𑨫\", \"𑨬\", \"𑨭\", \"𑨮\", \"𑨯\", \"𑨰\", \"𑨱\", \"𑨬\", \"𑨲\", \"𑨥𑩇𑨓\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"𑨀𑨆𑨵\", \"\", \"𑩂\", \"𑩃\"],\n  \"candra\": [\"𑨄\"],\n  \"extra_consonants\": [\"𑨋\", \"𑨌\", \"𑨍\", \"𑨨\", \"𑨖\", \"𑨗\", \"𑨟\", \"𑨪\", \"𑨫\"]\n};\nschemes.cyrillic = {\n  \"vowels\": [\"а\", \"а̄\", \"и\", \"ӣ\", \"у\", \"ӯ\", \"р̣\", \"р̣̄\", \"л̣\", \"л̣̄\", \"э̆\", \"э\", \"аи\", \"о̆\", \"о\", \"ау\"],\n  \"yogavaahas\": [\"м̣\", \"х̣\", \"м̐\"],\n  \"virama\": [\"\"],\n  \"accents\": [\"̭\", \"॒\", \"̀\", \"́\", \"²\", \"³\", \"⁴\", \"⁵\", \"⁶\", \"⁷\", \"⁸\", \"⁹\", \"꣪\", \"꣫\", \"꣬\", \"꣭\", \"꣮\", \"꣯\", \"꣰\", \"꣱\"],\n  \"consonants\": [\"к\", \"кх\", \"г\", \"гх\", \"н̇\", \"ч\", \"чх\", \"дж\", \"джх\", \"н̃\", \"т̣\", \"т̣х\", \"д̣\", \"д̣х\", \"н̣\", \"т\", \"тх\", \"д\", \"дх\", \"н\", \"п\", \"пх\", \"б\", \"бх\", \"м\", \"й\", \"р\", \"л\", \"в\", \"ш́\", \"ш\", \"с\", \"х\", \"л̤\", \"кш\", \"джн̃\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"ом̣\", \"'\", \"।\", \"॥\"],\n  \"candra\": [\"ӕ\"],\n  \"extra_consonants\": [\"ԛ\", \"к͟х\", \"г̇\", \"з\", \"р̤\", \"р̤х\", \"ф\", \"й̣\", \"р̱\"]\n};\nschemes.hk = {\n  \"vowels\": [\"a\", \"A\", \"i\", \"I\", \"u\", \"U\", \"R\", \"RR\", \"lR\", \"lRR\", \"è\", \"e\", \"ai\", \"ò\", \"o\", \"au\"],\n  \"yogavaahas\": [\"M\", \"H\", \"~\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"k\", \"kh\", \"g\", \"gh\", \"G\", \"c\", \"ch\", \"j\", \"jh\", \"J\", \"T\", \"Th\", \"D\", \"Dh\", \"N\", \"t\", \"th\", \"d\", \"dh\", \"n\", \"p\", \"ph\", \"b\", \"bh\", \"m\", \"y\", \"r\", \"l\", \"v\", \"z\", \"S\", \"s\", \"h\", \"L\", \"kS\", \"jJ\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"OM\", \"'\", \"|\", \"||\"],\n  \"extra_consonants\": [\"q\", \"qh\", \"g2\", \"z2\", \"r3\", \"r3h\", \"f\", \"Y\", \"r2\", \"Z\"]\n};\nschemes.iast = {\n  \"vowels\": [\"a\", \"ā\", \"i\", \"ī\", \"u\", \"ū\", \"ṛ\", \"ṝ\", \"ḷ\", \"ḹ\", \"è\", \"e\", \"ai\", \"ò\", \"o\", \"au\"],\n  \"yogavaahas\": [\"ṃ\", \"ḥ\", \"~\"],\n  \"virama\": [\"\"],\n  \"accents\": [\"̭\", \"॒\", \"̀\", \"́\", \"²\", \"³\", \"⁴\", \"⁵\", \"⁶\", \"⁷\", \"⁸\", \"⁹\", \"꣪\", \"꣫\", \"꣬\", \"꣭\", \"꣮\", \"꣯\", \"꣰\", \"꣱\"],\n  \"consonants\": [\"k\", \"kh\", \"g\", \"gh\", \"ṅ\", \"c\", \"ch\", \"j\", \"jh\", \"ñ\", \"ṭ\", \"ṭh\", \"ḍ\", \"ḍh\", \"ṇ\", \"t\", \"th\", \"d\", \"dh\", \"n\", \"p\", \"ph\", \"b\", \"bh\", \"m\", \"y\", \"r\", \"l\", \"v\", \"ś\", \"ṣ\", \"s\", \"h\", \"l̤\", \"kṣ\", \"jñ\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"oṃ\", \"'\", \"|\", \"||\"],\n  \"extra_consonants\": [\"q\", \"k͟h\", \"ġ\", \"z\", \"\", \"\", \"f\", \"ẏ\", \"ṟ\", \"ḻ\"],\n  \"alternates\": {\n    \"|\": [\".\", \"/\"],\n    \"||\": [\"..\", \"//\"],\n    \"'\": [\"`\"],\n    \"m̐\": [\"ṁ\"],\n    \"ṛ\": [\"r̥\"],\n    \"ṝ\": [\"ṝ\", \"r̥̄\", \"r̥̄\"],\n    \"́\": [\"¹\"]\n  },\n  \"accented_vowel_alternates\": {\n    \"á\": [\"á\"],\n    \"é\": [\"é\"],\n    \"í\": [\"í\"],\n    \"ó\": [\"ó\"],\n    \"ú\": [\"ú\"],\n    \"à\": [\"à\"],\n    \"è\": [\"è\"],\n    \"ì\": [\"ì\"],\n    \"ò\": [\"ò\"],\n    \"ù\": [\"ù\"]\n  }\n};\nschemes.iso = {\n  \"vowels\": [\"a\", \"ā\", \"i\", \"ī\", \"u\", \"ū\", \"r̥\", \"r̥̄\", \"l̥\", \"l̥̄\", \"e\", \"ē\", \"ai\", \"o\", \"ō\", \"au\"],\n  \"yogavaahas\": [\"ṁ\", \"ḥ\", \"~\"],\n  \"virama\": [\"\"],\n  \"accents\": [\"̭\", \"॒\", \"̀\", \"́\", \"²\", \"³\", \"⁴\", \"⁵\", \"⁶\", \"⁷\", \"⁸\", \"⁹\", \"꣪\", \"꣫\", \"꣬\", \"꣭\", \"꣮\", \"꣯\", \"꣰\", \"꣱\"],\n  \"consonants\": [\"k\", \"kh\", \"g\", \"gh\", \"ṅ\", \"c\", \"ch\", \"j\", \"jh\", \"ñ\", \"ṭ\", \"ṭh\", \"ḍ\", \"ḍh\", \"ṇ\", \"t\", \"th\", \"d\", \"dh\", \"n\", \"p\", \"ph\", \"b\", \"bh\", \"m\", \"y\", \"r\", \"l\", \"v\", \"ś\", \"ṣ\", \"s\", \"h\", \"ḷ\", \"kṣ\", \"jñ\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"ōṁ\", \"'\", \"।\", \"॥\"],\n  \"extra_consonants\": [\"q\", \"k͟h\", \"ġ\", \"z\", \"ṛ\", \"ṛh\", \"f\", \"ẏ\", \"ṟ\", \"ḻ\"],\n  \"accented_vowel_alternates\": {\n    \"á\": [\"á\"],\n    \"é\": [\"é\"],\n    \"í\": [\"í\"],\n    \"ó\": [\"ó\"],\n    \"ú\": [\"ú\"],\n    \"à\": [\"à\"],\n    \"è\": [\"è\"],\n    \"ì\": [\"ì\"],\n    \"ò\": [\"ò\"],\n    \"ù\": [\"ù\"]\n  },\n  \"alternates\": {\n    \"|\": [\".\", \"/\"],\n    \"||\": [\"..\", \"//\"],\n    \"'\": [\"`\"],\n    \"m̐\": [\"ṁ\"],\n    \"ṝ\": [\"ṝ\", \"r̥̄\", \"r̥̄\"],\n    \"́\": [\"¹\"]\n  }\n};\nschemes.itrans = {\n  \"vowels\": [\"a\", \"A\", \"i\", \"I\", \"u\", \"U\", \"RRi\", \"RRI\", \"LLi\", \"LLI\", \"è\", \"e\", \"ai\", \"ò\", \"o\", \"au\"],\n  \"yogavaahas\": [\"M\", \"H\", \".N\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"k\", \"kh\", \"g\", \"gh\", \"~N\", \"ch\", \"Ch\", \"j\", \"jh\", \"~n\", \"T\", \"Th\", \"D\", \"Dh\", \"N\", \"t\", \"th\", \"d\", \"dh\", \"n\", \"p\", \"ph\", \"b\", \"bh\", \"m\", \"y\", \"r\", \"l\", \"v\", \"sh\", \"Sh\", \"s\", \"h\", \"L\", \"kSh\", \"j~n\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"OM\", \".a\", \"|\", \"||\"],\n  \"candra\": [\".c\"],\n  \"zwj\": [\"{}\"],\n  \"skip\": \"_\",\n  \"accents\": [\"\\\\'\", \"\\\\_\"],\n  \"extra_consonants\": [\"q\", \"K\", \"G\", \"z\", \".D\", \".Dh\", \"f\", \"Y\", \"R\", \"zh\"],\n  \"alternates\": {\n    \"A\": [\"aa\"],\n    \"I\": [\"ii\", \"ee\"],\n    \"U\": [\"uu\", \"oo\"],\n    \"RRi\": [\"R^i\"],\n    \"RRI\": [\"R^I\"],\n    \"LLi\": [\"L^i\"],\n    \"LLI\": [\"L^I\"],\n    \"M\": [\".m\", \".n\"],\n    \"~N\": [\"N^\"],\n    \"ch\": [\"c\"],\n    \"Ch\": [\"C\", \"chh\"],\n    \"~n\": [\"JN\"],\n    \"v\": [\"w\"],\n    \"Sh\": [\"S\", \"shh\"],\n    \"kSh\": [\"kS\", \"x\"],\n    \"j~n\": [\"GY\", \"dny\"],\n    \"OM\": [\"AUM\"],\n    \"\\\\_\": [\"\\\\`\"],\n    \"\\\\_H\": [\"\\\\`H\"],\n    \"\\\\'M\": [\"\\\\'.m\", \"\\\\'.n\"],\n    \"\\\\_M\": [\"\\\\_.m\", \"\\\\_.n\", \"\\\\`M\", \"\\\\`.m\", \"\\\\`.n\"],\n    \".a\": [\"~\"],\n    \"|\": [\".\"],\n    \"||\": [\"..\"],\n    \"z\": [\"J\"]\n  }\n};\nschemes.optitrans = {\n  \"vowels\": [\"a\", \"A\", \"i\", \"I\", \"u\", \"U\", \"R\", \"RR\", \"LLi\", \"LLI\", \"E\", \"e\", \"ai\", \"O\", \"o\", \"au\", \"ea\", \"oa\"],\n  \"yogavaahas\": [\"M\", \"H\", \".N\", \"kH\", \"pH\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"k\", \"kh\", \"g\", \"gh\", \"~N\", \"ch\", \"Ch\", \"j\", \"jh\", \"~n\", \"T\", \"Th\", \"D\", \"Dh\", \"N\", \"t\", \"th\", \"d\", \"dh\", \"n\", \"p\", \"ph\", \"b\", \"bh\", \"m\", \"y\", \"r\", \"l\", \"v\", \"sh\", \"Sh\", \"s\", \"h\", \"L\", \"x\", \"jn\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"OM\", \".a\", \"|\", \"||\"],\n  \"candra\": [\".c\"],\n  \"zwj\": [\"{}\"],\n  \"skip\": \"_\",\n  \"accents\": [\"\\\\'\", \"\\\\_\"],\n  \"extra_consonants\": [\".k\", \"q\", \".g\", \"z\", \".D\", \".Dh\", \"f\", \"Y\", \".Rh\", \".L\"],\n  \"alternates\": {\n    \"A\": [\"aa\"],\n    \"I\": [\"ii\", \"ee\"],\n    \"U\": [\"uu\"],\n    \"R\": [\"RRi\", \"R^i\"],\n    \"RR\": [\"RRI\", \"R^I\"],\n    \"LLi\": [\"L^i\"],\n    \"LLI\": [\"L^I\"],\n    \"M\": [\".m\", \".n\"],\n    \"ch\": [\"c\"],\n    \"Ch\": [\"C\"],\n    \"jh\": [\"J\"],\n    \"ph\": [\"P\"],\n    \"bh\": [\"B\"],\n    \"~n\": [\"JN\", \"jJN\", \"GY\"],\n    \"v\": [\"w\"],\n    \"Sh\": [\"S\"],\n    \"x\": [\"kS\", \"ksh\"],\n    \"j~n\": [\"GY\", \"dny\"],\n    \"|\": [\".\"],\n    \"||\": [\"..\"],\n    \"z\": [\"J\"]\n  }\n};\nschemes.slp1 = {\n  \"vowels\": [\"a\", \"A\", \"i\", \"I\", \"u\", \"U\", \"f\", \"F\", \"x\", \"X\", \"è\", \"e\", \"E\", \"ò\", \"o\", \"O\"],\n  \"yogavaahas\": [\"M\", \"H\", \"~\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"k\", \"K\", \"g\", \"G\", \"N\", \"c\", \"C\", \"j\", \"J\", \"Y\", \"w\", \"W\", \"q\", \"Q\", \"R\", \"t\", \"T\", \"d\", \"D\", \"n\", \"p\", \"P\", \"b\", \"B\", \"m\", \"y\", \"r\", \"l\", \"v\", \"S\", \"z\", \"s\", \"h\", \"L\", \"kz\", \"jY\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"oM\", \"'\", \".\", \"..\"],\n  \"extra_consonants\": [\"k0\", \"K0\", \"g0\", \"j0\", \"q0\", \"Q0\", \"P0\", \"Y0\", \"r2\", \"L0\"]\n};\nschemes.velthuis = {\n  \"vowels\": [\"a\", \"aa\", \"i\", \"ii\", \"u\", \"uu\", \".r\", \".rr\", \".li\", \".ll\", \"è\", \"e\", \"ai\", \"ò\", \"o\", \"au\"],\n  \"yogavaahas\": [\".m\", \".h\", \"\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"k\", \"kh\", \"g\", \"gh\", \"\\\"n\", \"c\", \"ch\", \"j\", \"jh\", \"~n\", \".t\", \".th\", \".d\", \".d\", \".n\", \"t\", \"th\", \"d\", \"dh\", \"n\", \"p\", \"ph\", \"b\", \"bh\", \"m\", \"y\", \"r\", \"l\", \"v\", \"~s\", \".s\", \"s\", \"h\", \"L\", \"k.s\", \"j~n\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"o.m\", \"'\", \"|\", \"||\"]\n};\nschemes.wx = {\n  \"vowels\": [\"a\", \"A\", \"i\", \"I\", \"u\", \"U\", \"q\", \"Q\", \"L\", \"\", \"è\", \"e\", \"E\", \"\", \"o\", \"O\"],\n  \"yogavaahas\": [\"M\", \"H\", \"z\"],\n  \"virama\": [\"\"],\n  \"consonants\": [\"k\", \"K\", \"g\", \"G\", \"f\", \"c\", \"C\", \"j\", \"J\", \"F\", \"t\", \"T\", \"d\", \"D\", \"N\", \"w\", \"W\", \"x\", \"X\", \"n\", \"p\", \"P\", \"b\", \"B\", \"m\", \"y\", \"r\", \"l\", \"v\", \"S\", \"R\", \"s\", \"h\", \"\", \"kR\", \"jF\"],\n  \"symbols\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"oM\", \"'\", \"|\", \"||\"]\n};\n\nfunction exportSanscriptSingleton(global, schemes) {\n  \"use strict\";\n\n  var Sanscript = {};\n  Sanscript.defaults = {\n    \"skip_sgml\": false,\n    \"syncope\": false\n  };\n  Sanscript.schemes = schemes;\n  var romanSchemes = {};\n  var cache = {};\n\n  Sanscript.isRomanScheme = function (name) {\n    return {}.hasOwnProperty.call(romanSchemes, name);\n  };\n\n  Sanscript.addBrahmicScheme = function (name, scheme) {\n    Sanscript.schemes[name] = scheme;\n  };\n\n  Sanscript.addRomanScheme = function (name, scheme) {\n    if (!(\"vowel_marks\" in scheme)) {\n      scheme.vowel_marks = scheme.vowels.slice(1);\n    }\n\n    Sanscript.schemes[name] = scheme;\n    romanSchemes[name] = true;\n  };\n\n  var deepCopy = function deepCopy(scheme) {\n    return JSON.parse(JSON.stringify(scheme));\n  };\n\n  (function () {\n    var capitalize = function capitalize(text) {\n      return text.charAt(0).toUpperCase() + text.substring(1, text.length);\n    };\n\n    var addCapitalAlternates = function addCapitalAlternates(codeList, alternatesMap) {\n      var _iterator = _createForOfIteratorHelper(codeList),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var v = _step.value;\n          var initAlternatesList = alternatesMap[v] || [];\n          var alternatesList = initAlternatesList;\n          alternatesList = alternatesList.concat(capitalize(v));\n\n          var _iterator2 = _createForOfIteratorHelper(initAlternatesList),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var alternate = _step2.value;\n              alternatesList = alternatesList.concat(capitalize(alternate));\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          alternatesMap[v] = alternatesList;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    };\n\n    addCapitalAlternates(schemes.iast.vowels, schemes.iast.alternates);\n    addCapitalAlternates(schemes.iast.consonants, schemes.iast.alternates);\n    addCapitalAlternates(schemes.iast.extra_consonants, schemes.iast.alternates);\n    addCapitalAlternates([\"oṃ\"], schemes.iast.alternates);\n    var kolkata = deepCopy(schemes.iast);\n    schemes.kolkata = kolkata;\n    var schemeNames = [\"iast\", \"iso\", \"itrans\", \"optitrans\", \"hk\", \"kolkata\", \"slp1\", \"velthuis\", \"wx\", \"cyrillic\"];\n    kolkata.vowels = [\"a\", \"ā\", \"i\", \"ī\", \"u\", \"ū\", \"ṛ\", \"ṝ\", \"ḷ\", \"ḹ\", \"e\", \"ē\", \"ai\", \"o\", \"ō\", \"au\"];\n    addCapitalAlternates(schemes.kolkata.vowels, schemes.kolkata.alternates);\n    addCapitalAlternates(schemes.iso.vowels, schemes.iso.alternates);\n    addCapitalAlternates(schemes.iso.consonants, schemes.iso.alternates);\n    addCapitalAlternates(schemes.iso.extra_consonants, schemes.iso.alternates);\n    addCapitalAlternates([\"ōṁ\"], schemes.iso.alternates);\n\n    for (var i = 0, name; name = schemeNames[i]; i++) {\n      Sanscript.addRomanScheme(name, schemes[name]);\n    }\n\n    var itrans_dravidian = deepCopy(schemes.itrans);\n    itrans_dravidian.vowels = [\"a\", \"A\", \"i\", \"I\", \"u\", \"U\", \"Ri\", \"RRI\", \"LLi\", \"LLi\", \"e\", \"E\", \"ai\", \"o\", \"O\", \"au\"];\n    itrans_dravidian.vowel_marks = itrans_dravidian.vowels.slice(1);\n    Sanscript.addRomanScheme(\"itrans_dravidian\", itrans_dravidian);\n  })();\n\n  var makeMap = function makeMap(from, to, _options) {\n    var consonants = {};\n    var fromScheme = Sanscript.schemes[from];\n    var letters = {};\n    var tokenLengths = [];\n    var marks = {};\n    var accents = {};\n    var toScheme = Sanscript.schemes[to];\n    var alternates = fromScheme[\"alternates\"] || {};\n\n    for (var group in fromScheme) {\n      if (!{}.hasOwnProperty.call(fromScheme, group)) {\n        continue;\n      }\n\n      var fromGroup = fromScheme[group];\n      var toGroup = toScheme[group];\n\n      if (toGroup === undefined) {\n        continue;\n      }\n\n      for (var i = 0; i < fromGroup.length; i++) {\n        var F = fromGroup[i];\n        var T = toGroup[i];\n        var alts = alternates[F] || [];\n        var numAlts = alts.length;\n        var j = 0;\n        tokenLengths.push(F.length);\n\n        for (j = 0; j < numAlts; j++) {\n          tokenLengths.push(alts[j].length);\n        }\n\n        if (group === \"vowel_marks\" || group === \"virama\") {\n          marks[F] = T;\n\n          for (j = 0; j < numAlts; j++) {\n            marks[alts[j]] = T;\n          }\n        } else {\n          letters[F] = T;\n\n          for (j = 0; j < numAlts; j++) {\n            letters[alts[j]] = T;\n          }\n\n          if (group === \"consonants\" || group === \"extra_consonants\") {\n            consonants[F] = T;\n\n            for (j = 0; j < numAlts; j++) {\n              consonants[alts[j]] = T;\n            }\n          }\n\n          if (group === \"accents\") {\n            accents[F] = T;\n\n            for (j = 0; j < numAlts; j++) {\n              accents[alts[j]] = T;\n            }\n          }\n        }\n      }\n    }\n\n    if (fromScheme[\"accented_vowel_alternates\"]) {\n      for (var _i = 0, _Object$keys = Object.keys(fromScheme[\"accented_vowel_alternates\"]); _i < _Object$keys.length; _i++) {\n        var baseAccentedVowel = _Object$keys[_i];\n        var synonyms = fromScheme.accented_vowel_alternates[baseAccentedVowel];\n\n        var _iterator3 = _createForOfIteratorHelper(synonyms),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var accentedVowel = _step3.value;\n            var baseVowel = baseAccentedVowel.substring(0, baseAccentedVowel.length - 1);\n            var sourceAccent = baseAccentedVowel[baseAccentedVowel.length - 1];\n            var targetAccent = accents[sourceAccent] || sourceAccent;\n            marks[accentedVowel] = (marks[baseVowel] || \"\") + targetAccent;\n            letters[accentedVowel] = letters[baseVowel].concat(targetAccent);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n    }\n\n    return {\n      consonants: consonants,\n      accents: accents,\n      fromRoman: Sanscript.isRomanScheme(from),\n      letters: letters,\n      marks: marks,\n      maxTokenLength: Math.max.apply(Math, tokenLengths),\n      toRoman: Sanscript.isRomanScheme(to),\n      virama: toScheme.virama,\n      toSchemeA: toScheme.vowels[0],\n      fromSchemeA: fromScheme.vowels[0],\n      from: from,\n      to: to\n    };\n  };\n\n  var transliterateRoman = function transliterateRoman(data, map, options) {\n    var buf = [];\n    var consonants = map.consonants;\n    var dataLength = data.length;\n    var letters = map.letters;\n    var marks = map.marks;\n    var maxTokenLength = map.maxTokenLength;\n    var optSkipSGML = options.skip_sgml;\n    var optSyncope = options.syncope;\n    var toRoman = map.toRoman;\n    var virama = map.virama;\n    var hadConsonant = false;\n    var tempLetter;\n    var tempMark;\n    var tokenBuffer = \"\";\n    var skippingSGML = false;\n    var skippingTrans = false;\n    var toggledTrans = false;\n\n    if (map.from == \"optitrans\") {\n      data = data.replace(/n([kKgGx])/g, \"~N$1\");\n      data = data.replace(/n([cCjJ])/g, \"~n$1\");\n      data = data.replace(/n([TD])/g, \"N$1\");\n      dataLength = data.length;\n    }\n\n    for (var i = 0, L; (L = data.charAt(i)) || tokenBuffer; i++) {\n      var difference = maxTokenLength - tokenBuffer.length;\n\n      if (difference > 0 && i < dataLength) {\n        tokenBuffer += L;\n\n        if (difference > 1) {\n          continue;\n        }\n      }\n\n      for (var j = 0; j < maxTokenLength; j++) {\n        var token = tokenBuffer.substr(0, maxTokenLength - j);\n\n        if (skippingSGML === true) {\n          skippingSGML = token !== \">\";\n        } else if (token === \"<\") {\n          skippingSGML = optSkipSGML;\n        } else if (token === \"##\") {\n          toggledTrans = !toggledTrans;\n          tokenBuffer = tokenBuffer.substr(2);\n          break;\n        }\n\n        skippingTrans = skippingSGML || toggledTrans;\n\n        if ((tempLetter = letters[token]) !== undefined && !skippingTrans) {\n          if (toRoman) {\n            buf.push(tempLetter);\n          } else {\n            if (hadConsonant) {\n              if (tempMark = marks[token]) {\n                buf.push(tempMark);\n              } else if (token !== map.fromSchemeA) {\n                buf.push(virama);\n                buf.push(tempLetter);\n              }\n            } else {\n              buf.push(tempLetter);\n            }\n\n            hadConsonant = token in consonants;\n          }\n\n          tokenBuffer = tokenBuffer.substr(maxTokenLength - j);\n          break;\n        } else if (j === maxTokenLength - 1) {\n          if (hadConsonant) {\n            hadConsonant = false;\n\n            if (!optSyncope) {\n              buf.push(virama);\n            }\n          }\n\n          buf.push(token);\n          tokenBuffer = tokenBuffer.substr(1);\n        }\n      }\n    }\n\n    if (hadConsonant && !optSyncope) {\n      buf.push(virama);\n    }\n\n    var result = buf.join(\"\");\n    var toScheme = schemes[map.to];\n\n    if (!toRoman && Object.keys(map.accents).length > 0) {\n      var pattern = new RegExp(\"([\".concat(Object.values(map.accents).join(\"\"), \"])([\").concat(toScheme['yogavaahas'].join(\"\"), \"])\"), \"g\");\n      result = result.replace(pattern, \"$2$1\");\n    }\n\n    return result;\n  };\n\n  var transliterateBrahmic = function transliterateBrahmic(data, map, _options) {\n    var buf = [];\n    var consonants = map.consonants;\n    var letters = map.letters;\n    var marks = map.marks;\n    var toRoman = map.toRoman;\n    var danglingHash = false;\n    var hadRomanConsonant = false;\n    var temp;\n    var skippingTrans = false;\n    var toScheme = schemes[map.to];\n\n    if (toRoman && Object.keys(map.accents).length > 0) {\n      var pattern = new RegExp(\"([\".concat(toScheme['yogavaahas'].join(\"\"), \"])([\").concat(Object.values(map.accents).join(\"\"), \"])\"), \"g\");\n      data = data.replace(pattern, \"$2$1\");\n    }\n\n    for (var i = 0, L; L = data.charAt(i); i++) {\n      if (L === \"#\") {\n        if (danglingHash) {\n          skippingTrans = !skippingTrans;\n          danglingHash = false;\n        } else {\n          danglingHash = true;\n        }\n\n        if (hadRomanConsonant) {\n          buf.push(map.toSchemeA);\n          hadRomanConsonant = false;\n        }\n\n        continue;\n      } else if (skippingTrans) {\n        buf.push(L);\n        continue;\n      }\n\n      if ((temp = marks[L]) !== undefined) {\n        buf.push(temp);\n        hadRomanConsonant = false;\n      } else {\n        if (danglingHash) {\n          buf.push(\"#\");\n          danglingHash = false;\n        }\n\n        if (hadRomanConsonant) {\n          buf.push(map.toSchemeA);\n          hadRomanConsonant = false;\n        }\n\n        if (temp = letters[L]) {\n          buf.push(temp);\n          hadRomanConsonant = toRoman && L in consonants;\n        } else {\n          buf.push(L);\n        }\n      }\n    }\n\n    if (hadRomanConsonant) {\n      buf.push(map.toSchemeA);\n    }\n\n    return buf.join(\"\");\n  };\n\n  Sanscript.t = function (data, from, to, options) {\n    options = options || {};\n    var cachedOptions = cache.options || {};\n    var defaults = Sanscript.defaults;\n    var hasPriorState = cache.from === from && cache.to === to;\n    var map;\n\n    for (var key in defaults) {\n      if ({}.hasOwnProperty.call(defaults, key)) {\n        var value = defaults[key];\n\n        if (key in options) {\n          value = options[key];\n        }\n\n        options[key] = value;\n\n        if (value !== cachedOptions[key]) {\n          hasPriorState = false;\n        }\n      }\n    }\n\n    if (hasPriorState) {\n      map = cache.map;\n    } else {\n      map = makeMap(from, to, options);\n      cache = {\n        from: from,\n        map: map,\n        options: options,\n        to: to\n      };\n    }\n\n    if (from === \"itrans\") {\n      data = data.replace(/\\{\\\\m\\+\\}/g, \".h.N\");\n      data = data.replace(/\\.h/g, \"\");\n      data = data.replace(/\\\\([^'`_]|$)/g, \"##$1##\");\n    }\n\n    if (from === \"tamil_superscripted\") {\n      var pattern = \"([\" + schemes[\"tamil_superscripted\"][\"vowel_marks\"].join(\"\") + schemes[\"tamil_superscripted\"][\"virama\"] + \"॒॑\" + \"]+)([²³⁴])\";\n      data = data.replace(new RegExp(pattern, \"g\"), \"$2$1\");\n      console.error(\"transliteration from tamil_superscripted not fully implemented!\");\n    }\n\n    var result = \"\";\n\n    if (map.fromRoman) {\n      result = transliterateRoman(data, map, options);\n    } else {\n      result = transliterateBrahmic(data, map, options);\n    }\n\n    if (to === \"tamil_superscripted\") {\n      var _pattern = \"([²³⁴])([\" + schemes[\"tamil_superscripted\"][\"vowel_marks\"].join(\"\") + schemes[\"tamil_superscripted\"][\"virama\"] + \"॒॑\" + \"]+)\";\n\n      result = result.replace(new RegExp(_pattern, \"g\"), \"$2$1\");\n    }\n\n    if (to == \"optitrans\") {\n      result = result.replace(/~N([kKgGx])/g, \"n$1\");\n      result = result.replace(/~n([cCjJ])/g, \"n$1\");\n    }\n\n    return result;\n  };\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return Sanscript;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n}\n\nexportSanscriptSingleton(this, schemes);\n\n\n//# sourceURL=webpack://module_%5Bname%5D/./node_modules/@sanskrit-coders/sanscript/sanscript.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./js/transliteration.js");
/******/ 	module_transliteration = __webpack_exports__;
/******/ 	
/******/ })()
;